{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Pandas Basics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Topics\n",
    "\n",
    "* Pandas data structures\n",
    "* Working with DataFrames - Baby Names Example"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## pandas\n",
    "[pandas](http://pandas.pydata.org/) is an open source [Python](http://www.python.org/) library for data analysis. pandas makes Python great for exploring and visualizing data.\n",
    "\n",
    "pandas has become the main library for working with data. It was originally developed by [Wes McKinney](http://blog.wesmckinney.com) and now has more than 300 contributors. Wes has written a book that I highly recommend. You can buy it [here](http://shop.oreilly.com/product/0636920023784.do) or download it [here](http://it-ebooks.info/book/1041/).\n",
    "\n",
    "<img src=\"http://pandas.pydata.org/_static/pydata_cover.jpg\" width=200 />\n",
    "\n",
    "pandas can input and output data from all kinds of formats (including databases), do joins and other SQL-like functions for shaping the data, handle missing values with ease, support time series, has basic plotting capabilities and basic statistical functionality and much more. To understand pandas well, read as much of the [documentation](http://pandas.pydata.org/pandas-docs/version/0.15.0/dsintro.html) as possible.\n",
    "\n",
    "We will use pandas often in BA575."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Setup Libraries and Styles"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "plt.matplotlib.style.use('default')\n",
    "\n",
    "# allows inline plotting\n",
    "%matplotlib inline\n",
    "\n",
    "# Display all the columns instead of a summary\n",
    "pd.options.display.width = 4000\n",
    "pd.options.display.max_columns = 100\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## pandas Data Structures"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "pandas introduces two new data structures to Python - [Series](http://pandas.pydata.org/pandas-docs/dev/dsintro.html#series) and [DataFrame](http://pandas.pydata.org/pandas-docs/dev/dsintro.html#dataframe). Both are built on top of [NumPy](http://www.numpy.org/). This means that they are *fast*.\n",
    "\n",
    "A Series is a one dimensional array with labels. (Technically, it is a 1-D labeled NumPy array.)\n",
    "\n",
    "A DataFrame is a 2D table with row and column labels and potentially heterogeneous columns (not all the same data type)."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Series"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A Series is a one-dimensional object similar to an array, list, or column in a table. It will assign a labeled index to each item in the Series. By default, each item will receive an index label from 0 to n, where n is the length of the Series minus one."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0              53\n",
       "1       Corvallis\n",
       "2          3.1415\n",
       "3     -1789710578\n",
       "4    I love data!\n",
       "dtype: object"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# create a Series with an arbitrary list\n",
    "s = pd.Series([53, 'Corvallis', 3.1415, -1789710578, 'I love data!'])\n",
    "s"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Alternatively, you can specify an index to use when creating the Series. Notice that the index labels don't need to be ordered."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "A              53\n",
       "Z       Corvallis\n",
       "C          3.1415\n",
       "Y     -1789710578\n",
       "E    I love data!\n",
       "dtype: object"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "s = pd.Series([53, 'Corvallis', 3.1415, -1789710578, 'I love data!'], index=['A', 'Z', 'C', 'Y', 'E'])\n",
    "s"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The Series constructor also can convert a dictonary using the keys of the dictionary as its index."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin            450.0\n",
       "Boston              NaN\n",
       "Chicago          1000.0\n",
       "New York         1300.0\n",
       "Portland          900.0\n",
       "San Francisco    1100.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "d = {'Chicago': 1000, 'New York': 1300, 'Portland': 900, 'San Francisco': 1100,\n",
    "     'Austin': 450, 'Boston': None}\n",
    "cities = pd.Series(d)\n",
    "cities"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice that the value for Boston is \"NaN.\" This means \"Not a Number.\" It does **NOT** mean zero. You can't do arithmetic on NaN."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can use the index to select specific items from the Series ..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1000.0"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities['Chicago']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Chicago          1000.0\n",
       "Portland          900.0\n",
       "San Francisco    1100.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities[['Chicago', 'Portland', 'San Francisco']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "... or you can use boolean indexing for selection."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin      450.0\n",
       "Portland    900.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities[cities < 1000]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "That last one might be a little weird, so let's make it more clear. `cities < 1000` returns a list of True/False values that we then pass to our Series cities that then returns the corresponding True items."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin            True\n",
       "Boston           False\n",
       "Chicago          False\n",
       "New York         False\n",
       "Portland          True\n",
       "San Francisco    False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "less_than_1000 = cities < 1000\n",
    "less_than_1000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": false,
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin      750.0\n",
       "Portland    750.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "cities[less_than_1000]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can also change the values in a Series on the fly."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Old value: 1000.0\n",
      "New value: 1400.0\n"
     ]
    }
   ],
   "source": [
    "# changing based on the index\n",
    "print 'Old value:', cities['Chicago']\n",
    "cities['Chicago'] = 1400\n",
    "print 'New value:', cities['Chicago']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin      450.0\n",
       "Portland    900.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# changing values using boolean logic\n",
    "cities[cities < 1000]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin      750.0\n",
       "Portland    750.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities[cities < 1000] = 750\n",
    "cities[cities < 1000]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What if you aren't sure whether an item is in the Series? You can check easily."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "False"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'Seattle' in cities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'San Francisco' in cities"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Mathematical operations can be done using scalars and functions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin           250.000000\n",
       "Boston                  NaN\n",
       "Chicago          466.666667\n",
       "New York         433.333333\n",
       "Portland         250.000000\n",
       "San Francisco    366.666667\n",
       "dtype: float64"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities / 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin            562500.0\n",
       "Boston                 NaN\n",
       "Chicago          1960000.0\n",
       "New York         1690000.0\n",
       "Portland          562500.0\n",
       "San Francisco    1210000.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np. square (cities)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can add two Series together, which returns a union of the two Series with the addition occurring on the shared index values. Values on either Series that did not have a shared index will produce a NULL/NaN (not a number)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Chicago     1400.0\n",
       "New York    1300.0\n",
       "Portland     750.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities[['Chicago', 'New York', 'Portland']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin       750.0\n",
       "New York    1300.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities[['Austin', 'New York']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin         NaN\n",
       "Chicago        NaN\n",
       "New York    2600.0\n",
       "Portland       NaN\n",
       "dtype: float64"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities[['Chicago', 'New York', 'Portland']] + cities[['Austin', 'New York']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice that because Austin, Chicago, and Portland were not found in both Series, they were returned with NULL/NaN values.\n",
    "\n",
    "NULL checking can be performed with isnull and notnull."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin            True\n",
       "Boston           False\n",
       "Chicago           True\n",
       "New York          True\n",
       "Portland          True\n",
       "San Francisco     True\n",
       "dtype: bool"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Returns a Series that tells us which elements of cities are not NULL\n",
    "cities.notnull()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin           False\n",
       "Boston            True\n",
       "Chicago          False\n",
       "New York         False\n",
       "Portland         False\n",
       "San Francisco    False\n",
       "dtype: bool"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Returns a Series that tells us which elements of cities are not NULL\n",
    "cities.isnull()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Boston   NaN\n",
       "dtype: float64"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# use boolean logic to grab the NULL cities\n",
    "cities[cities.isnull()]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Some interesting things to do with a Series:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin            750.0\n",
       "Chicago          1400.0\n",
       "New York         1300.0\n",
       "Portland          750.0\n",
       "San Francisco    1100.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities.dropna()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin            750.0\n",
       "Boston              0.0\n",
       "Chicago          1400.0\n",
       "New York         1300.0\n",
       "Portland          750.0\n",
       "San Francisco    1100.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities.fillna(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1060.0"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Austin            750.0\n",
       "Boston           1060.0\n",
       "Chicago          1400.0\n",
       "New York         1300.0\n",
       "Portland          750.0\n",
       "San Francisco    1100.0\n",
       "dtype: float64"
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cities.fillna(cities.mean())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### DataFrame"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A DataFrame is a two dimensional data structure with labels for both rows and columns. Each column can be a different data type (numeric, string, boolean, etc.). A DataFrame has both a row and a column index. DataFrames have similarities with spreadsheets and database tables. If you're familiar with the R language, a pandas DataFrame plays the role of R's data.frame.\n",
    "\n",
    "The DataFrame is what lets you manipulate data easily. It is basically the whole reason for pandas.\n",
    "\n",
    "We will be working with DataFrames for the rest of this tutorial."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One way to create a DataFrame is to pass a dictionary of lists to the DataFrame constructor.\n",
    "\n",
    "Using the columns parameter allows us to tell the constructor how we'd like the columns ordered. By default, the DataFrame constructor will order the columns alphabetically (though this isn't the case when reading from a file - more on that next)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{'losses': [5, 8, 6, 1, 5, 10, 6, 12],\n",
       " 'team': ['Bears',\n",
       "  'Bears',\n",
       "  'Bears',\n",
       "  'Packers',\n",
       "  'Packers',\n",
       "  'Lions',\n",
       "  'Lions',\n",
       "  'Lions'],\n",
       " 'wins': [11, 8, 10, 15, 11, 6, 10, 4],\n",
       " 'year': [2010, 2011, 2012, 2011, 2012, 2010, 2011, 2012]}"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = {'year': [2010, 2011, 2012, 2011, 2012, 2010, 2011, 2012],\n",
    "        'team': ['Bears', 'Bears', 'Bears', 'Packers', 'Packers', 'Lions', 'Lions', 'Lions'],\n",
    "        'wins': [11, 8, 10, 15, 11, 6, 10, 4],\n",
    "        'losses': [5, 8, 6, 1, 5, 10, 6, 12]}\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>team</th>\n",
       "      <th>wins</th>\n",
       "      <th>losses</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2010</td>\n",
       "      <td>Bears</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2011</td>\n",
       "      <td>Bears</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012</td>\n",
       "      <td>Bears</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011</td>\n",
       "      <td>Packers</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012</td>\n",
       "      <td>Packers</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2010</td>\n",
       "      <td>Lions</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2011</td>\n",
       "      <td>Lions</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2012</td>\n",
       "      <td>Lions</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     team  wins  losses\n",
       "0  2010    Bears    11       5\n",
       "1  2011    Bears     8       8\n",
       "2  2012    Bears    10       6\n",
       "3  2011  Packers    15       1\n",
       "4  2012  Packers    11       5\n",
       "5  2010    Lions     6      10\n",
       "6  2011    Lions    10       6\n",
       "7  2012    Lions     4      12"
      ]
     },
     "execution_count": 76,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football = pd.DataFrame(data, columns=['year', 'team', 'wins', 'losses'])\n",
    "football"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can do a lot of things with this simple DataFrame. Here are some examples."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>wins</th>\n",
       "      <th>losses</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>8.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>2011.125000</td>\n",
       "      <td>9.375000</td>\n",
       "      <td>6.625000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.834523</td>\n",
       "      <td>3.377975</td>\n",
       "      <td>3.377975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2010.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2010.750000</td>\n",
       "      <td>7.500000</td>\n",
       "      <td>5.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2011.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>6.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>2012.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>8.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>2012.000000</td>\n",
       "      <td>15.000000</td>\n",
       "      <td>12.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              year       wins     losses\n",
       "count     8.000000   8.000000   8.000000\n",
       "mean   2011.125000   9.375000   6.625000\n",
       "std       0.834523   3.377975   3.377975\n",
       "min    2010.000000   4.000000   1.000000\n",
       "25%    2010.750000   7.500000   5.000000\n",
       "50%    2011.000000  10.000000   6.000000\n",
       "75%    2012.000000  11.000000   8.500000\n",
       "max    2012.000000  15.000000  12.000000"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>team</th>\n",
       "      <th>wins</th>\n",
       "      <th>losses</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2010</td>\n",
       "      <td>Bears</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2011</td>\n",
       "      <td>Bears</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012</td>\n",
       "      <td>Bears</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2011</td>\n",
       "      <td>Packers</td>\n",
       "      <td>15</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012</td>\n",
       "      <td>Packers</td>\n",
       "      <td>11</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     team  wins  losses\n",
       "0  2010    Bears    11       5\n",
       "1  2011    Bears     8       8\n",
       "2  2012    Bears    10       6\n",
       "3  2011  Packers    15       1\n",
       "4  2012  Packers    11       5"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "team\n",
       "Bears      3\n",
       "Lions      3\n",
       "Packers    2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football.groupby('team').size()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "team     year\n",
       "Bears    2010    1\n",
       "         2011    1\n",
       "         2012    1\n",
       "Lions    2010    1\n",
       "         2011    1\n",
       "         2012    1\n",
       "Packers  2011    1\n",
       "         2012    1\n",
       "dtype: int64"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "football.groupby(['team', 'year']).size()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Much more often, you'll have a dataset you want to read into a DataFrame. Let's look at several common ways of doing so."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "slideshow": {
     "slide_type": "slide"
    }
   },
   "source": [
    "## Working with DataFrames - Baby Names Example"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One of the most common file formats for data is [CSV](http://en.wikipedia.org/wiki/Comma-separated_values) - Comma Separated Values. \n",
    "\n",
    "Reading a CSV is as simple as calling the `read_csv` function. By default, the `read_csv` function expects the column separator to be a comma, but you can change that using the `sep` parameter."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's look at the baby names data set from Wes McKinney's [book](http://shop.oreilly.com/product/0636920023784.do). This data comes from the [US Social Security Administration](http://www.ssa.gov/oact/babynames/)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "names = pd.read_csv('baby-names2.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>name</th>\n",
       "      <th>prop</th>\n",
       "      <th>sex</th>\n",
       "      <th>soundex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1880</td>\n",
       "      <td>John</td>\n",
       "      <td>0.081541</td>\n",
       "      <td>boy</td>\n",
       "      <td>J500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1880</td>\n",
       "      <td>William</td>\n",
       "      <td>0.080511</td>\n",
       "      <td>boy</td>\n",
       "      <td>W450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1880</td>\n",
       "      <td>James</td>\n",
       "      <td>0.050057</td>\n",
       "      <td>boy</td>\n",
       "      <td>J520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1880</td>\n",
       "      <td>Charles</td>\n",
       "      <td>0.045167</td>\n",
       "      <td>boy</td>\n",
       "      <td>C642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1880</td>\n",
       "      <td>George</td>\n",
       "      <td>0.043292</td>\n",
       "      <td>boy</td>\n",
       "      <td>G620</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     name      prop  sex soundex\n",
       "0  1880     John  0.081541  boy    J500\n",
       "1  1880  William  0.080511  boy    W450\n",
       "2  1880    James  0.050057  boy    J520\n",
       "3  1880  Charles  0.045167  boy    C642\n",
       "4  1880   George  0.043292  boy    G620"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "names.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "year       258000\n",
       "name       258000\n",
       "prop       258000\n",
       "sex        258000\n",
       "soundex    258000\n",
       "dtype: int64"
      ]
     },
     "execution_count": 87,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "names.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>name</th>\n",
       "      <th>prop</th>\n",
       "      <th>sex</th>\n",
       "      <th>soundex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1880</td>\n",
       "      <td>John</td>\n",
       "      <td>0.081541</td>\n",
       "      <td>boy</td>\n",
       "      <td>J500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1880</td>\n",
       "      <td>William</td>\n",
       "      <td>0.080511</td>\n",
       "      <td>boy</td>\n",
       "      <td>W450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1880</td>\n",
       "      <td>James</td>\n",
       "      <td>0.050057</td>\n",
       "      <td>boy</td>\n",
       "      <td>J520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1880</td>\n",
       "      <td>Charles</td>\n",
       "      <td>0.045167</td>\n",
       "      <td>boy</td>\n",
       "      <td>C642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1880</td>\n",
       "      <td>George</td>\n",
       "      <td>0.043292</td>\n",
       "      <td>boy</td>\n",
       "      <td>G620</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   year     name      prop  sex soundex\n",
       "0  1880     John  0.081541  boy    J500\n",
       "1  1880  William  0.080511  boy    W450\n",
       "2  1880    James  0.050057  boy    J520\n",
       "3  1880  Charles  0.045167  boy    C642\n",
       "4  1880   George  0.043292  boy    G620"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "names[names.year == 1880].head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>name</th>\n",
       "      <th>prop</th>\n",
       "      <th>sex</th>\n",
       "      <th>soundex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>129995</th>\n",
       "      <td>1880</td>\n",
       "      <td>Emaline</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>girl</td>\n",
       "      <td>E545</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129996</th>\n",
       "      <td>1880</td>\n",
       "      <td>Ester</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>girl</td>\n",
       "      <td>E236</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129997</th>\n",
       "      <td>1880</td>\n",
       "      <td>Eulah</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>girl</td>\n",
       "      <td>E400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129998</th>\n",
       "      <td>1880</td>\n",
       "      <td>Eulalie</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>girl</td>\n",
       "      <td>E440</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129999</th>\n",
       "      <td>1880</td>\n",
       "      <td>Euna</td>\n",
       "      <td>0.000041</td>\n",
       "      <td>girl</td>\n",
       "      <td>E500</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "        year     name      prop   sex soundex\n",
       "129995  1880  Emaline  0.000041  girl    E545\n",
       "129996  1880    Ester  0.000041  girl    E236\n",
       "129997  1880    Eulah  0.000041  girl    E400\n",
       "129998  1880  Eulalie  0.000041  girl    E440\n",
       "129999  1880     Euna  0.000041  girl    E500"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "names[names.year == 1880].tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "boys = names[names.sex == 'boy']    # segment the data into boy and girl names. We have 2 dataframes now.\n",
    "girls = names[names.sex == 'girl']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "year\n",
       "1880    1000\n",
       "1881    1000\n",
       "1882    1000\n",
       "1883    1000\n",
       "1884    1000\n",
       "1885    1000\n",
       "1886    1000\n",
       "1887    1000\n",
       "1888    1000\n",
       "1889    1000\n",
       "1890    1000\n",
       "1891    1000\n",
       "1892    1000\n",
       "1893    1000\n",
       "1894    1000\n",
       "1895    1000\n",
       "1896    1000\n",
       "1897    1000\n",
       "1898    1000\n",
       "1899    1000\n",
       "1900    1000\n",
       "1901    1000\n",
       "1902    1000\n",
       "1903    1000\n",
       "1904    1000\n",
       "1905    1000\n",
       "1906    1000\n",
       "1907    1000\n",
       "1908    1000\n",
       "1909    1000\n",
       "        ... \n",
       "1979    1000\n",
       "1980    1000\n",
       "1981    1000\n",
       "1982    1000\n",
       "1983    1000\n",
       "1984    1000\n",
       "1985    1000\n",
       "1986    1000\n",
       "1987    1000\n",
       "1988    1000\n",
       "1989    1000\n",
       "1990    1000\n",
       "1991    1000\n",
       "1992    1000\n",
       "1993    1000\n",
       "1994    1000\n",
       "1995    1000\n",
       "1996    1000\n",
       "1997    1000\n",
       "1998    1000\n",
       "1999    1000\n",
       "2000    1000\n",
       "2001    1000\n",
       "2002    1000\n",
       "2003    1000\n",
       "2004    1000\n",
       "2005    1000\n",
       "2006    1000\n",
       "2007    1000\n",
       "2008    1000\n",
       "dtype: int64"
      ]
     },
     "execution_count": 94,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boys.groupby('year').size()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It looks like our data set is all about the top 1000 boy names per year. Is it the same for girls?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "year\n",
       "1880    1000\n",
       "1881    1000\n",
       "1882    1000\n",
       "1883    1000\n",
       "1884    1000\n",
       "1885    1000\n",
       "1886    1000\n",
       "1887    1000\n",
       "1888    1000\n",
       "1889    1000\n",
       "1890    1000\n",
       "1891    1000\n",
       "1892    1000\n",
       "1893    1000\n",
       "1894    1000\n",
       "1895    1000\n",
       "1896    1000\n",
       "1897    1000\n",
       "1898    1000\n",
       "1899    1000\n",
       "1900    1000\n",
       "1901    1000\n",
       "1902    1000\n",
       "1903    1000\n",
       "1904    1000\n",
       "1905    1000\n",
       "1906    1000\n",
       "1907    1000\n",
       "1908    1000\n",
       "1909    1000\n",
       "        ... \n",
       "1979    1000\n",
       "1980    1000\n",
       "1981    1000\n",
       "1982    1000\n",
       "1983    1000\n",
       "1984    1000\n",
       "1985    1000\n",
       "1986    1000\n",
       "1987    1000\n",
       "1988    1000\n",
       "1989    1000\n",
       "1990    1000\n",
       "1991    1000\n",
       "1992    1000\n",
       "1993    1000\n",
       "1994    1000\n",
       "1995    1000\n",
       "1996    1000\n",
       "1997    1000\n",
       "1998    1000\n",
       "1999    1000\n",
       "2000    1000\n",
       "2001    1000\n",
       "2002    1000\n",
       "2003    1000\n",
       "2004    1000\n",
       "2005    1000\n",
       "2006    1000\n",
       "2007    1000\n",
       "2008    1000\n",
       "dtype: int64"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "girls.groupby('year').size()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can look at specific years."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>name</th>\n",
       "      <th>prop</th>\n",
       "      <th>sex</th>\n",
       "      <th>soundex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1880</td>\n",
       "      <td>John</td>\n",
       "      <td>0.081541</td>\n",
       "      <td>boy</td>\n",
       "      <td>J500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1880</td>\n",
       "      <td>William</td>\n",
       "      <td>0.080511</td>\n",
       "      <td>boy</td>\n",
       "      <td>W450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1880</td>\n",
       "      <td>James</td>\n",
       "      <td>0.050057</td>\n",
       "      <td>boy</td>\n",
       "      <td>J520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1880</td>\n",
       "      <td>Charles</td>\n",
       "      <td>0.045167</td>\n",
       "      <td>boy</td>\n",
       "      <td>C642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1880</td>\n",
       "      <td>George</td>\n",
       "      <td>0.043292</td>\n",
       "      <td>boy</td>\n",
       "      <td>G620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1880</td>\n",
       "      <td>Frank</td>\n",
       "      <td>0.027380</td>\n",
       "      <td>boy</td>\n",
       "      <td>F652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1880</td>\n",
       "      <td>Joseph</td>\n",
       "      <td>0.022229</td>\n",
       "      <td>boy</td>\n",
       "      <td>J210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>1880</td>\n",
       "      <td>Thomas</td>\n",
       "      <td>0.021401</td>\n",
       "      <td>boy</td>\n",
       "      <td>T520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>1880</td>\n",
       "      <td>Henry</td>\n",
       "      <td>0.020641</td>\n",
       "      <td>boy</td>\n",
       "      <td>H560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>1880</td>\n",
       "      <td>Robert</td>\n",
       "      <td>0.020404</td>\n",
       "      <td>boy</td>\n",
       "      <td>R163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>1880</td>\n",
       "      <td>Edward</td>\n",
       "      <td>0.019965</td>\n",
       "      <td>boy</td>\n",
       "      <td>E363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1880</td>\n",
       "      <td>Harry</td>\n",
       "      <td>0.018175</td>\n",
       "      <td>boy</td>\n",
       "      <td>H600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>1880</td>\n",
       "      <td>Walter</td>\n",
       "      <td>0.014822</td>\n",
       "      <td>boy</td>\n",
       "      <td>W436</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1880</td>\n",
       "      <td>Arthur</td>\n",
       "      <td>0.013504</td>\n",
       "      <td>boy</td>\n",
       "      <td>A636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>1880</td>\n",
       "      <td>Fred</td>\n",
       "      <td>0.013251</td>\n",
       "      <td>boy</td>\n",
       "      <td>F630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>1880</td>\n",
       "      <td>Albert</td>\n",
       "      <td>0.012609</td>\n",
       "      <td>boy</td>\n",
       "      <td>A416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>1880</td>\n",
       "      <td>Samuel</td>\n",
       "      <td>0.008648</td>\n",
       "      <td>boy</td>\n",
       "      <td>S540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>1880</td>\n",
       "      <td>David</td>\n",
       "      <td>0.007339</td>\n",
       "      <td>boy</td>\n",
       "      <td>D130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>1880</td>\n",
       "      <td>Louis</td>\n",
       "      <td>0.006993</td>\n",
       "      <td>boy</td>\n",
       "      <td>L200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>1880</td>\n",
       "      <td>Joe</td>\n",
       "      <td>0.006174</td>\n",
       "      <td>boy</td>\n",
       "      <td>J000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>1880</td>\n",
       "      <td>Charlie</td>\n",
       "      <td>0.006165</td>\n",
       "      <td>boy</td>\n",
       "      <td>C640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>1880</td>\n",
       "      <td>Clarence</td>\n",
       "      <td>0.006165</td>\n",
       "      <td>boy</td>\n",
       "      <td>C465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>1880</td>\n",
       "      <td>Richard</td>\n",
       "      <td>0.006148</td>\n",
       "      <td>boy</td>\n",
       "      <td>R263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>1880</td>\n",
       "      <td>Andrew</td>\n",
       "      <td>0.005439</td>\n",
       "      <td>boy</td>\n",
       "      <td>A536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>1880</td>\n",
       "      <td>Daniel</td>\n",
       "      <td>0.005430</td>\n",
       "      <td>boy</td>\n",
       "      <td>D540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>1880</td>\n",
       "      <td>Ernest</td>\n",
       "      <td>0.005194</td>\n",
       "      <td>boy</td>\n",
       "      <td>E652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>1880</td>\n",
       "      <td>Will</td>\n",
       "      <td>0.004966</td>\n",
       "      <td>boy</td>\n",
       "      <td>W400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>1880</td>\n",
       "      <td>Jesse</td>\n",
       "      <td>0.004805</td>\n",
       "      <td>boy</td>\n",
       "      <td>J200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>1880</td>\n",
       "      <td>Oscar</td>\n",
       "      <td>0.004594</td>\n",
       "      <td>boy</td>\n",
       "      <td>O260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>1880</td>\n",
       "      <td>Lewis</td>\n",
       "      <td>0.004366</td>\n",
       "      <td>boy</td>\n",
       "      <td>L200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>1880</td>\n",
       "      <td>Peter</td>\n",
       "      <td>0.004189</td>\n",
       "      <td>boy</td>\n",
       "      <td>P360</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>1880</td>\n",
       "      <td>Benjamin</td>\n",
       "      <td>0.004138</td>\n",
       "      <td>boy</td>\n",
       "      <td>B525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>1880</td>\n",
       "      <td>Frederick</td>\n",
       "      <td>0.004079</td>\n",
       "      <td>boy</td>\n",
       "      <td>F636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>1880</td>\n",
       "      <td>Willie</td>\n",
       "      <td>0.004020</td>\n",
       "      <td>boy</td>\n",
       "      <td>W400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>1880</td>\n",
       "      <td>Alfred</td>\n",
       "      <td>0.003961</td>\n",
       "      <td>boy</td>\n",
       "      <td>A416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>1880</td>\n",
       "      <td>Sam</td>\n",
       "      <td>0.003860</td>\n",
       "      <td>boy</td>\n",
       "      <td>S500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>1880</td>\n",
       "      <td>Roy</td>\n",
       "      <td>0.003716</td>\n",
       "      <td>boy</td>\n",
       "      <td>R000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>1880</td>\n",
       "      <td>Herbert</td>\n",
       "      <td>0.003581</td>\n",
       "      <td>boy</td>\n",
       "      <td>H616</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>1880</td>\n",
       "      <td>Jacob</td>\n",
       "      <td>0.003412</td>\n",
       "      <td>boy</td>\n",
       "      <td>J210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>1880</td>\n",
       "      <td>Tom</td>\n",
       "      <td>0.003370</td>\n",
       "      <td>boy</td>\n",
       "      <td>T500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>1880</td>\n",
       "      <td>Elmer</td>\n",
       "      <td>0.003150</td>\n",
       "      <td>boy</td>\n",
       "      <td>E456</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>1880</td>\n",
       "      <td>Carl</td>\n",
       "      <td>0.003142</td>\n",
       "      <td>boy</td>\n",
       "      <td>C640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>1880</td>\n",
       "      <td>Lee</td>\n",
       "      <td>0.003049</td>\n",
       "      <td>boy</td>\n",
       "      <td>L000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>1880</td>\n",
       "      <td>Howard</td>\n",
       "      <td>0.003015</td>\n",
       "      <td>boy</td>\n",
       "      <td>H630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>1880</td>\n",
       "      <td>Martin</td>\n",
       "      <td>0.003015</td>\n",
       "      <td>boy</td>\n",
       "      <td>M635</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>1880</td>\n",
       "      <td>Michael</td>\n",
       "      <td>0.002990</td>\n",
       "      <td>boy</td>\n",
       "      <td>M240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>1880</td>\n",
       "      <td>Bert</td>\n",
       "      <td>0.002939</td>\n",
       "      <td>boy</td>\n",
       "      <td>B630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>1880</td>\n",
       "      <td>Herman</td>\n",
       "      <td>0.002931</td>\n",
       "      <td>boy</td>\n",
       "      <td>H655</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>1880</td>\n",
       "      <td>Jim</td>\n",
       "      <td>0.002914</td>\n",
       "      <td>boy</td>\n",
       "      <td>J500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>1880</td>\n",
       "      <td>Francis</td>\n",
       "      <td>0.002905</td>\n",
       "      <td>boy</td>\n",
       "      <td>F652</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    year       name      prop  sex soundex\n",
       "0   1880       John  0.081541  boy    J500\n",
       "1   1880    William  0.080511  boy    W450\n",
       "2   1880      James  0.050057  boy    J520\n",
       "3   1880    Charles  0.045167  boy    C642\n",
       "4   1880     George  0.043292  boy    G620\n",
       "5   1880      Frank  0.027380  boy    F652\n",
       "6   1880     Joseph  0.022229  boy    J210\n",
       "7   1880     Thomas  0.021401  boy    T520\n",
       "8   1880      Henry  0.020641  boy    H560\n",
       "9   1880     Robert  0.020404  boy    R163\n",
       "10  1880     Edward  0.019965  boy    E363\n",
       "11  1880      Harry  0.018175  boy    H600\n",
       "12  1880     Walter  0.014822  boy    W436\n",
       "13  1880     Arthur  0.013504  boy    A636\n",
       "14  1880       Fred  0.013251  boy    F630\n",
       "15  1880     Albert  0.012609  boy    A416\n",
       "16  1880     Samuel  0.008648  boy    S540\n",
       "17  1880      David  0.007339  boy    D130\n",
       "18  1880      Louis  0.006993  boy    L200\n",
       "19  1880        Joe  0.006174  boy    J000\n",
       "20  1880    Charlie  0.006165  boy    C640\n",
       "21  1880   Clarence  0.006165  boy    C465\n",
       "22  1880    Richard  0.006148  boy    R263\n",
       "23  1880     Andrew  0.005439  boy    A536\n",
       "24  1880     Daniel  0.005430  boy    D540\n",
       "25  1880     Ernest  0.005194  boy    E652\n",
       "26  1880       Will  0.004966  boy    W400\n",
       "27  1880      Jesse  0.004805  boy    J200\n",
       "28  1880      Oscar  0.004594  boy    O260\n",
       "29  1880      Lewis  0.004366  boy    L200\n",
       "30  1880      Peter  0.004189  boy    P360\n",
       "31  1880   Benjamin  0.004138  boy    B525\n",
       "32  1880  Frederick  0.004079  boy    F636\n",
       "33  1880     Willie  0.004020  boy    W400\n",
       "34  1880     Alfred  0.003961  boy    A416\n",
       "35  1880        Sam  0.003860  boy    S500\n",
       "36  1880        Roy  0.003716  boy    R000\n",
       "37  1880    Herbert  0.003581  boy    H616\n",
       "38  1880      Jacob  0.003412  boy    J210\n",
       "39  1880        Tom  0.003370  boy    T500\n",
       "40  1880      Elmer  0.003150  boy    E456\n",
       "41  1880       Carl  0.003142  boy    C640\n",
       "42  1880        Lee  0.003049  boy    L000\n",
       "43  1880     Howard  0.003015  boy    H630\n",
       "44  1880     Martin  0.003015  boy    M635\n",
       "45  1880    Michael  0.002990  boy    M240\n",
       "46  1880       Bert  0.002939  boy    B630\n",
       "47  1880     Herman  0.002931  boy    H655\n",
       "48  1880        Jim  0.002914  boy    J500\n",
       "49  1880    Francis  0.002905  boy    F652"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boys[:50]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>name</th>\n",
       "      <th>prop</th>\n",
       "      <th>sex</th>\n",
       "      <th>soundex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>73000</th>\n",
       "      <td>1953</td>\n",
       "      <td>Robert</td>\n",
       "      <td>0.043059</td>\n",
       "      <td>boy</td>\n",
       "      <td>R163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73001</th>\n",
       "      <td>1953</td>\n",
       "      <td>James</td>\n",
       "      <td>0.042975</td>\n",
       "      <td>boy</td>\n",
       "      <td>J520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73002</th>\n",
       "      <td>1953</td>\n",
       "      <td>Michael</td>\n",
       "      <td>0.042092</td>\n",
       "      <td>boy</td>\n",
       "      <td>M240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73003</th>\n",
       "      <td>1953</td>\n",
       "      <td>John</td>\n",
       "      <td>0.040046</td>\n",
       "      <td>boy</td>\n",
       "      <td>J500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73004</th>\n",
       "      <td>1953</td>\n",
       "      <td>David</td>\n",
       "      <td>0.038037</td>\n",
       "      <td>boy</td>\n",
       "      <td>D130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73005</th>\n",
       "      <td>1953</td>\n",
       "      <td>William</td>\n",
       "      <td>0.030890</td>\n",
       "      <td>boy</td>\n",
       "      <td>W450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73006</th>\n",
       "      <td>1953</td>\n",
       "      <td>Richard</td>\n",
       "      <td>0.029146</td>\n",
       "      <td>boy</td>\n",
       "      <td>R263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73007</th>\n",
       "      <td>1953</td>\n",
       "      <td>Thomas</td>\n",
       "      <td>0.023480</td>\n",
       "      <td>boy</td>\n",
       "      <td>T520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73008</th>\n",
       "      <td>1953</td>\n",
       "      <td>Charles</td>\n",
       "      <td>0.019179</td>\n",
       "      <td>boy</td>\n",
       "      <td>C642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73009</th>\n",
       "      <td>1953</td>\n",
       "      <td>Gary</td>\n",
       "      <td>0.018464</td>\n",
       "      <td>boy</td>\n",
       "      <td>G600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73010</th>\n",
       "      <td>1953</td>\n",
       "      <td>Steven</td>\n",
       "      <td>0.016856</td>\n",
       "      <td>boy</td>\n",
       "      <td>S315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73011</th>\n",
       "      <td>1953</td>\n",
       "      <td>Mark</td>\n",
       "      <td>0.014657</td>\n",
       "      <td>boy</td>\n",
       "      <td>M620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73012</th>\n",
       "      <td>1953</td>\n",
       "      <td>Joseph</td>\n",
       "      <td>0.014595</td>\n",
       "      <td>boy</td>\n",
       "      <td>J210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73013</th>\n",
       "      <td>1953</td>\n",
       "      <td>Donald</td>\n",
       "      <td>0.014160</td>\n",
       "      <td>boy</td>\n",
       "      <td>D543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73014</th>\n",
       "      <td>1953</td>\n",
       "      <td>Ronald</td>\n",
       "      <td>0.013826</td>\n",
       "      <td>boy</td>\n",
       "      <td>R543</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73015</th>\n",
       "      <td>1953</td>\n",
       "      <td>Kenneth</td>\n",
       "      <td>0.012745</td>\n",
       "      <td>boy</td>\n",
       "      <td>K530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73016</th>\n",
       "      <td>1953</td>\n",
       "      <td>Paul</td>\n",
       "      <td>0.012738</td>\n",
       "      <td>boy</td>\n",
       "      <td>P400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73017</th>\n",
       "      <td>1953</td>\n",
       "      <td>Larry</td>\n",
       "      <td>0.012577</td>\n",
       "      <td>boy</td>\n",
       "      <td>L600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73018</th>\n",
       "      <td>1953</td>\n",
       "      <td>Dennis</td>\n",
       "      <td>0.011813</td>\n",
       "      <td>boy</td>\n",
       "      <td>D520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73019</th>\n",
       "      <td>1953</td>\n",
       "      <td>Daniel</td>\n",
       "      <td>0.011733</td>\n",
       "      <td>boy</td>\n",
       "      <td>D540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73020</th>\n",
       "      <td>1953</td>\n",
       "      <td>Stephen</td>\n",
       "      <td>0.010905</td>\n",
       "      <td>boy</td>\n",
       "      <td>S315</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73021</th>\n",
       "      <td>1953</td>\n",
       "      <td>George</td>\n",
       "      <td>0.009586</td>\n",
       "      <td>boy</td>\n",
       "      <td>G620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73022</th>\n",
       "      <td>1953</td>\n",
       "      <td>Edward</td>\n",
       "      <td>0.009485</td>\n",
       "      <td>boy</td>\n",
       "      <td>E363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73023</th>\n",
       "      <td>1953</td>\n",
       "      <td>Gregory</td>\n",
       "      <td>0.008079</td>\n",
       "      <td>boy</td>\n",
       "      <td>G626</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73024</th>\n",
       "      <td>1953</td>\n",
       "      <td>Jeffrey</td>\n",
       "      <td>0.007954</td>\n",
       "      <td>boy</td>\n",
       "      <td>J160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73025</th>\n",
       "      <td>1953</td>\n",
       "      <td>Timothy</td>\n",
       "      <td>0.007588</td>\n",
       "      <td>boy</td>\n",
       "      <td>T530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73026</th>\n",
       "      <td>1953</td>\n",
       "      <td>Douglas</td>\n",
       "      <td>0.007072</td>\n",
       "      <td>boy</td>\n",
       "      <td>D242</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73027</th>\n",
       "      <td>1953</td>\n",
       "      <td>Bruce</td>\n",
       "      <td>0.007009</td>\n",
       "      <td>boy</td>\n",
       "      <td>B620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73028</th>\n",
       "      <td>1953</td>\n",
       "      <td>Jerry</td>\n",
       "      <td>0.006944</td>\n",
       "      <td>boy</td>\n",
       "      <td>J600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73029</th>\n",
       "      <td>1953</td>\n",
       "      <td>Terry</td>\n",
       "      <td>0.006636</td>\n",
       "      <td>boy</td>\n",
       "      <td>T600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73970</th>\n",
       "      <td>1953</td>\n",
       "      <td>Reyes</td>\n",
       "      <td>0.000028</td>\n",
       "      <td>boy</td>\n",
       "      <td>R200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73971</th>\n",
       "      <td>1953</td>\n",
       "      <td>Richie</td>\n",
       "      <td>0.000028</td>\n",
       "      <td>boy</td>\n",
       "      <td>R200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73972</th>\n",
       "      <td>1953</td>\n",
       "      <td>Rodrick</td>\n",
       "      <td>0.000028</td>\n",
       "      <td>boy</td>\n",
       "      <td>R362</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73973</th>\n",
       "      <td>1953</td>\n",
       "      <td>Windell</td>\n",
       "      <td>0.000028</td>\n",
       "      <td>boy</td>\n",
       "      <td>W534</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73974</th>\n",
       "      <td>1953</td>\n",
       "      <td>Winfield</td>\n",
       "      <td>0.000028</td>\n",
       "      <td>boy</td>\n",
       "      <td>W514</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73975</th>\n",
       "      <td>1953</td>\n",
       "      <td>Antony</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>A535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73976</th>\n",
       "      <td>1953</td>\n",
       "      <td>Arne</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>A650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73977</th>\n",
       "      <td>1953</td>\n",
       "      <td>Bradly</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>B634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73978</th>\n",
       "      <td>1953</td>\n",
       "      <td>Edison</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>E325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73979</th>\n",
       "      <td>1953</td>\n",
       "      <td>Edwardo</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>E363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73980</th>\n",
       "      <td>1953</td>\n",
       "      <td>Faron</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>F650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73981</th>\n",
       "      <td>1953</td>\n",
       "      <td>Franklyn</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>F652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73982</th>\n",
       "      <td>1953</td>\n",
       "      <td>Garey</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>G600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73983</th>\n",
       "      <td>1953</td>\n",
       "      <td>Genaro</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>G560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73984</th>\n",
       "      <td>1953</td>\n",
       "      <td>Hobert</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>H163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73985</th>\n",
       "      <td>1953</td>\n",
       "      <td>Lucien</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>L250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73986</th>\n",
       "      <td>1953</td>\n",
       "      <td>Rudolfo</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>R341</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73987</th>\n",
       "      <td>1953</td>\n",
       "      <td>Ashley</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>A240</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73988</th>\n",
       "      <td>1953</td>\n",
       "      <td>Blaise</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>B420</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73989</th>\n",
       "      <td>1953</td>\n",
       "      <td>Ellsworth</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>E426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73990</th>\n",
       "      <td>1953</td>\n",
       "      <td>Kimball</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>K514</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73991</th>\n",
       "      <td>1953</td>\n",
       "      <td>Lafayette</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>L130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73992</th>\n",
       "      <td>1953</td>\n",
       "      <td>Lonzo</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>L520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73993</th>\n",
       "      <td>1953</td>\n",
       "      <td>Newton</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>N350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73994</th>\n",
       "      <td>1953</td>\n",
       "      <td>Raymundo</td>\n",
       "      <td>0.000027</td>\n",
       "      <td>boy</td>\n",
       "      <td>R553</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73995</th>\n",
       "      <td>1953</td>\n",
       "      <td>Alvaro</td>\n",
       "      <td>0.000026</td>\n",
       "      <td>boy</td>\n",
       "      <td>A416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73996</th>\n",
       "      <td>1953</td>\n",
       "      <td>Antone</td>\n",
       "      <td>0.000026</td>\n",
       "      <td>boy</td>\n",
       "      <td>A535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73997</th>\n",
       "      <td>1953</td>\n",
       "      <td>Bernardo</td>\n",
       "      <td>0.000026</td>\n",
       "      <td>boy</td>\n",
       "      <td>B656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73998</th>\n",
       "      <td>1953</td>\n",
       "      <td>Caesar</td>\n",
       "      <td>0.000026</td>\n",
       "      <td>boy</td>\n",
       "      <td>C260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73999</th>\n",
       "      <td>1953</td>\n",
       "      <td>Damian</td>\n",
       "      <td>0.000026</td>\n",
       "      <td>boy</td>\n",
       "      <td>D550</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       year       name      prop  sex soundex\n",
       "73000  1953     Robert  0.043059  boy    R163\n",
       "73001  1953      James  0.042975  boy    J520\n",
       "73002  1953    Michael  0.042092  boy    M240\n",
       "73003  1953       John  0.040046  boy    J500\n",
       "73004  1953      David  0.038037  boy    D130\n",
       "73005  1953    William  0.030890  boy    W450\n",
       "73006  1953    Richard  0.029146  boy    R263\n",
       "73007  1953     Thomas  0.023480  boy    T520\n",
       "73008  1953    Charles  0.019179  boy    C642\n",
       "73009  1953       Gary  0.018464  boy    G600\n",
       "73010  1953     Steven  0.016856  boy    S315\n",
       "73011  1953       Mark  0.014657  boy    M620\n",
       "73012  1953     Joseph  0.014595  boy    J210\n",
       "73013  1953     Donald  0.014160  boy    D543\n",
       "73014  1953     Ronald  0.013826  boy    R543\n",
       "73015  1953    Kenneth  0.012745  boy    K530\n",
       "73016  1953       Paul  0.012738  boy    P400\n",
       "73017  1953      Larry  0.012577  boy    L600\n",
       "73018  1953     Dennis  0.011813  boy    D520\n",
       "73019  1953     Daniel  0.011733  boy    D540\n",
       "73020  1953    Stephen  0.010905  boy    S315\n",
       "73021  1953     George  0.009586  boy    G620\n",
       "73022  1953     Edward  0.009485  boy    E363\n",
       "73023  1953    Gregory  0.008079  boy    G626\n",
       "73024  1953    Jeffrey  0.007954  boy    J160\n",
       "73025  1953    Timothy  0.007588  boy    T530\n",
       "73026  1953    Douglas  0.007072  boy    D242\n",
       "73027  1953      Bruce  0.007009  boy    B620\n",
       "73028  1953      Jerry  0.006944  boy    J600\n",
       "73029  1953      Terry  0.006636  boy    T600\n",
       "...     ...        ...       ...  ...     ...\n",
       "73970  1953      Reyes  0.000028  boy    R200\n",
       "73971  1953     Richie  0.000028  boy    R200\n",
       "73972  1953    Rodrick  0.000028  boy    R362\n",
       "73973  1953    Windell  0.000028  boy    W534\n",
       "73974  1953   Winfield  0.000028  boy    W514\n",
       "73975  1953     Antony  0.000027  boy    A535\n",
       "73976  1953       Arne  0.000027  boy    A650\n",
       "73977  1953     Bradly  0.000027  boy    B634\n",
       "73978  1953     Edison  0.000027  boy    E325\n",
       "73979  1953    Edwardo  0.000027  boy    E363\n",
       "73980  1953      Faron  0.000027  boy    F650\n",
       "73981  1953   Franklyn  0.000027  boy    F652\n",
       "73982  1953      Garey  0.000027  boy    G600\n",
       "73983  1953     Genaro  0.000027  boy    G560\n",
       "73984  1953     Hobert  0.000027  boy    H163\n",
       "73985  1953     Lucien  0.000027  boy    L250\n",
       "73986  1953    Rudolfo  0.000027  boy    R341\n",
       "73987  1953     Ashley  0.000027  boy    A240\n",
       "73988  1953     Blaise  0.000027  boy    B420\n",
       "73989  1953  Ellsworth  0.000027  boy    E426\n",
       "73990  1953    Kimball  0.000027  boy    K514\n",
       "73991  1953  Lafayette  0.000027  boy    L130\n",
       "73992  1953      Lonzo  0.000027  boy    L520\n",
       "73993  1953     Newton  0.000027  boy    N350\n",
       "73994  1953   Raymundo  0.000027  boy    R553\n",
       "73995  1953     Alvaro  0.000026  boy    A416\n",
       "73996  1953     Antone  0.000026  boy    A535\n",
       "73997  1953   Bernardo  0.000026  boy    B656\n",
       "73998  1953     Caesar  0.000026  boy    C260\n",
       "73999  1953     Damian  0.000026  boy    D550\n",
       "\n",
       "[1000 rows x 5 columns]"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boys[boys['year'] == 1953]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>year</th>\n",
       "      <th>name</th>\n",
       "      <th>prop</th>\n",
       "      <th>sex</th>\n",
       "      <th>soundex</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>363</th>\n",
       "      <td>1880</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000186</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1335</th>\n",
       "      <td>1881</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000222</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2553</th>\n",
       "      <td>1882</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000098</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3417</th>\n",
       "      <td>1883</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000160</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4377</th>\n",
       "      <td>1884</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000179</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5366</th>\n",
       "      <td>1885</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000198</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6582</th>\n",
       "      <td>1886</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000092</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7357</th>\n",
       "      <td>1887</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000192</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8398</th>\n",
       "      <td>1888</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000169</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9448</th>\n",
       "      <td>1889</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000143</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10378</th>\n",
       "      <td>1890</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000184</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11418</th>\n",
       "      <td>1891</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000165</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12427</th>\n",
       "      <td>1892</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000152</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13453</th>\n",
       "      <td>1893</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14371</th>\n",
       "      <td>1894</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000200</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15584</th>\n",
       "      <td>1895</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000103</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16564</th>\n",
       "      <td>1896</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000108</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17484</th>\n",
       "      <td>1897</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000139</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18406</th>\n",
       "      <td>1898</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000182</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19462</th>\n",
       "      <td>1899</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000148</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20471</th>\n",
       "      <td>1900</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000148</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21382</th>\n",
       "      <td>1901</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000208</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22476</th>\n",
       "      <td>1902</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000151</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23438</th>\n",
       "      <td>1903</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000170</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24699</th>\n",
       "      <td>1904</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000087</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25509</th>\n",
       "      <td>1905</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000140</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26430</th>\n",
       "      <td>1906</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000180</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27546</th>\n",
       "      <td>1907</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000126</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28502</th>\n",
       "      <td>1908</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000150</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29522</th>\n",
       "      <td>1909</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000141</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99169</th>\n",
       "      <td>1979</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000782</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100157</th>\n",
       "      <td>1980</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.000875</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101138</th>\n",
       "      <td>1981</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.001059</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102107</th>\n",
       "      <td>1982</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.001417</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103092</th>\n",
       "      <td>1983</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.001635</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104097</th>\n",
       "      <td>1984</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.001565</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105090</th>\n",
       "      <td>1985</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.001675</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106080</th>\n",
       "      <td>1986</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.002019</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107082</th>\n",
       "      <td>1987</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.001986</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108073</th>\n",
       "      <td>1988</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.002165</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109068</th>\n",
       "      <td>1989</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.002351</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110070</th>\n",
       "      <td>1990</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.002468</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111069</th>\n",
       "      <td>1991</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.002573</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112065</th>\n",
       "      <td>1992</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.002883</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113061</th>\n",
       "      <td>1993</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.002948</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114061</th>\n",
       "      <td>1994</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.002890</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115059</th>\n",
       "      <td>1995</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.003029</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116064</th>\n",
       "      <td>1996</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.002786</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117059</th>\n",
       "      <td>1997</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.003008</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118062</th>\n",
       "      <td>1998</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.003003</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119056</th>\n",
       "      <td>1999</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.003363</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120054</th>\n",
       "      <td>2000</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.003515</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121055</th>\n",
       "      <td>2001</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.003513</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122055</th>\n",
       "      <td>2002</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.003579</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123043</th>\n",
       "      <td>2003</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.004500</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124038</th>\n",
       "      <td>2004</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.004728</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125038</th>\n",
       "      <td>2005</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.004756</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126041</th>\n",
       "      <td>2006</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.004629</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127039</th>\n",
       "      <td>2007</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.004657</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128037</th>\n",
       "      <td>2008</td>\n",
       "      <td>Evan</td>\n",
       "      <td>0.004566</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>129 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        year  name      prop  sex soundex\n",
       "363     1880  Evan  0.000186  boy    E150\n",
       "1335    1881  Evan  0.000222  boy    E150\n",
       "2553    1882  Evan  0.000098  boy    E150\n",
       "3417    1883  Evan  0.000160  boy    E150\n",
       "4377    1884  Evan  0.000179  boy    E150\n",
       "5366    1885  Evan  0.000198  boy    E150\n",
       "6582    1886  Evan  0.000092  boy    E150\n",
       "7357    1887  Evan  0.000192  boy    E150\n",
       "8398    1888  Evan  0.000169  boy    E150\n",
       "9448    1889  Evan  0.000143  boy    E150\n",
       "10378   1890  Evan  0.000184  boy    E150\n",
       "11418   1891  Evan  0.000165  boy    E150\n",
       "12427   1892  Evan  0.000152  boy    E150\n",
       "13453   1893  Evan  0.000140  boy    E150\n",
       "14371   1894  Evan  0.000200  boy    E150\n",
       "15584   1895  Evan  0.000103  boy    E150\n",
       "16564   1896  Evan  0.000108  boy    E150\n",
       "17484   1897  Evan  0.000139  boy    E150\n",
       "18406   1898  Evan  0.000182  boy    E150\n",
       "19462   1899  Evan  0.000148  boy    E150\n",
       "20471   1900  Evan  0.000148  boy    E150\n",
       "21382   1901  Evan  0.000208  boy    E150\n",
       "22476   1902  Evan  0.000151  boy    E150\n",
       "23438   1903  Evan  0.000170  boy    E150\n",
       "24699   1904  Evan  0.000087  boy    E150\n",
       "25509   1905  Evan  0.000140  boy    E150\n",
       "26430   1906  Evan  0.000180  boy    E150\n",
       "27546   1907  Evan  0.000126  boy    E150\n",
       "28502   1908  Evan  0.000150  boy    E150\n",
       "29522   1909  Evan  0.000141  boy    E150\n",
       "...      ...   ...       ...  ...     ...\n",
       "99169   1979  Evan  0.000782  boy    E150\n",
       "100157  1980  Evan  0.000875  boy    E150\n",
       "101138  1981  Evan  0.001059  boy    E150\n",
       "102107  1982  Evan  0.001417  boy    E150\n",
       "103092  1983  Evan  0.001635  boy    E150\n",
       "104097  1984  Evan  0.001565  boy    E150\n",
       "105090  1985  Evan  0.001675  boy    E150\n",
       "106080  1986  Evan  0.002019  boy    E150\n",
       "107082  1987  Evan  0.001986  boy    E150\n",
       "108073  1988  Evan  0.002165  boy    E150\n",
       "109068  1989  Evan  0.002351  boy    E150\n",
       "110070  1990  Evan  0.002468  boy    E150\n",
       "111069  1991  Evan  0.002573  boy    E150\n",
       "112065  1992  Evan  0.002883  boy    E150\n",
       "113061  1993  Evan  0.002948  boy    E150\n",
       "114061  1994  Evan  0.002890  boy    E150\n",
       "115059  1995  Evan  0.003029  boy    E150\n",
       "116064  1996  Evan  0.002786  boy    E150\n",
       "117059  1997  Evan  0.003008  boy    E150\n",
       "118062  1998  Evan  0.003003  boy    E150\n",
       "119056  1999  Evan  0.003363  boy    E150\n",
       "120054  2000  Evan  0.003515  boy    E150\n",
       "121055  2001  Evan  0.003513  boy    E150\n",
       "122055  2002  Evan  0.003579  boy    E150\n",
       "123043  2003  Evan  0.004500  boy    E150\n",
       "124038  2004  Evan  0.004728  boy    E150\n",
       "125038  2005  Evan  0.004756  boy    E150\n",
       "126041  2006  Evan  0.004629  boy    E150\n",
       "127039  2007  Evan  0.004657  boy    E150\n",
       "128037  2008  Evan  0.004566  boy    E150\n",
       "\n",
       "[129 rows x 5 columns]"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boys[boys['name'] == 'Evan']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "bidf = boys.set_index(['name', 'year'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th>prop</th>\n",
       "      <th>sex</th>\n",
       "      <th>soundex</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>name</th>\n",
       "      <th>year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>John</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.081541</td>\n",
       "      <td>boy</td>\n",
       "      <td>J500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>William</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.080511</td>\n",
       "      <td>boy</td>\n",
       "      <td>W450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>James</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.050057</td>\n",
       "      <td>boy</td>\n",
       "      <td>J520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Charles</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.045167</td>\n",
       "      <td>boy</td>\n",
       "      <td>C642</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>George</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.043292</td>\n",
       "      <td>boy</td>\n",
       "      <td>G620</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Frank</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.027380</td>\n",
       "      <td>boy</td>\n",
       "      <td>F652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Joseph</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.022229</td>\n",
       "      <td>boy</td>\n",
       "      <td>J210</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Thomas</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.021401</td>\n",
       "      <td>boy</td>\n",
       "      <td>T520</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Henry</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.020641</td>\n",
       "      <td>boy</td>\n",
       "      <td>H560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Robert</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.020404</td>\n",
       "      <td>boy</td>\n",
       "      <td>R163</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Edward</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.019965</td>\n",
       "      <td>boy</td>\n",
       "      <td>E363</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Harry</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.018175</td>\n",
       "      <td>boy</td>\n",
       "      <td>H600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Walter</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.014822</td>\n",
       "      <td>boy</td>\n",
       "      <td>W436</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Arthur</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.013504</td>\n",
       "      <td>boy</td>\n",
       "      <td>A636</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fred</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.013251</td>\n",
       "      <td>boy</td>\n",
       "      <td>F630</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Albert</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.012609</td>\n",
       "      <td>boy</td>\n",
       "      <td>A416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Samuel</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.008648</td>\n",
       "      <td>boy</td>\n",
       "      <td>S540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>David</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.007339</td>\n",
       "      <td>boy</td>\n",
       "      <td>D130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Louis</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.006993</td>\n",
       "      <td>boy</td>\n",
       "      <td>L200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Joe</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.006174</td>\n",
       "      <td>boy</td>\n",
       "      <td>J000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Charlie</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.006165</td>\n",
       "      <td>boy</td>\n",
       "      <td>C640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Clarence</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.006165</td>\n",
       "      <td>boy</td>\n",
       "      <td>C465</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Richard</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.006148</td>\n",
       "      <td>boy</td>\n",
       "      <td>R263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Andrew</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.005439</td>\n",
       "      <td>boy</td>\n",
       "      <td>A536</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Daniel</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.005430</td>\n",
       "      <td>boy</td>\n",
       "      <td>D540</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Ernest</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.005194</td>\n",
       "      <td>boy</td>\n",
       "      <td>E652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Will</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.004966</td>\n",
       "      <td>boy</td>\n",
       "      <td>W400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Jesse</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.004805</td>\n",
       "      <td>boy</td>\n",
       "      <td>J200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Oscar</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.004594</td>\n",
       "      <td>boy</td>\n",
       "      <td>O260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lewis</th>\n",
       "      <th>1880</th>\n",
       "      <td>0.004366</td>\n",
       "      <td>boy</td>\n",
       "      <td>L200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Landin</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000094</td>\n",
       "      <td>boy</td>\n",
       "      <td>L535</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Reagan</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000094</td>\n",
       "      <td>boy</td>\n",
       "      <td>R250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Turner</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000094</td>\n",
       "      <td>boy</td>\n",
       "      <td>T656</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Arnav</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000094</td>\n",
       "      <td>boy</td>\n",
       "      <td>A651</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Brenton</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000094</td>\n",
       "      <td>boy</td>\n",
       "      <td>B653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Callum</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000094</td>\n",
       "      <td>boy</td>\n",
       "      <td>C450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Jayvion</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000094</td>\n",
       "      <td>boy</td>\n",
       "      <td>J150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bridger</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000093</td>\n",
       "      <td>boy</td>\n",
       "      <td>B632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Sammy</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000093</td>\n",
       "      <td>boy</td>\n",
       "      <td>S500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Deegan</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000093</td>\n",
       "      <td>boy</td>\n",
       "      <td>D250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Jaylan</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000093</td>\n",
       "      <td>boy</td>\n",
       "      <td>J450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lennon</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000093</td>\n",
       "      <td>boy</td>\n",
       "      <td>L550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Odin</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000093</td>\n",
       "      <td>boy</td>\n",
       "      <td>O350</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Abdiel</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000092</td>\n",
       "      <td>boy</td>\n",
       "      <td>A134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Jerimiah</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000092</td>\n",
       "      <td>boy</td>\n",
       "      <td>J650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Eliezer</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000092</td>\n",
       "      <td>boy</td>\n",
       "      <td>E426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bronson</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000091</td>\n",
       "      <td>boy</td>\n",
       "      <td>B652</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cornelius</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000091</td>\n",
       "      <td>boy</td>\n",
       "      <td>C654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Pierre</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000091</td>\n",
       "      <td>boy</td>\n",
       "      <td>P600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Cortez</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000091</td>\n",
       "      <td>boy</td>\n",
       "      <td>C632</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Baron</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000090</td>\n",
       "      <td>boy</td>\n",
       "      <td>B650</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carlo</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000090</td>\n",
       "      <td>boy</td>\n",
       "      <td>C640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carsen</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000090</td>\n",
       "      <td>boy</td>\n",
       "      <td>C625</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Fletcher</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000090</td>\n",
       "      <td>boy</td>\n",
       "      <td>F432</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Izayah</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000090</td>\n",
       "      <td>boy</td>\n",
       "      <td>I200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Kolten</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000090</td>\n",
       "      <td>boy</td>\n",
       "      <td>K435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Damari</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000089</td>\n",
       "      <td>boy</td>\n",
       "      <td>D560</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Hugh</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000089</td>\n",
       "      <td>boy</td>\n",
       "      <td>H200</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Jensen</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000089</td>\n",
       "      <td>boy</td>\n",
       "      <td>J525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yurem</th>\n",
       "      <th>2008</th>\n",
       "      <td>0.000089</td>\n",
       "      <td>boy</td>\n",
       "      <td>Y650</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>129000 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                    prop  sex soundex\n",
       "name      year                       \n",
       "John      1880  0.081541  boy    J500\n",
       "William   1880  0.080511  boy    W450\n",
       "James     1880  0.050057  boy    J520\n",
       "Charles   1880  0.045167  boy    C642\n",
       "George    1880  0.043292  boy    G620\n",
       "Frank     1880  0.027380  boy    F652\n",
       "Joseph    1880  0.022229  boy    J210\n",
       "Thomas    1880  0.021401  boy    T520\n",
       "Henry     1880  0.020641  boy    H560\n",
       "Robert    1880  0.020404  boy    R163\n",
       "Edward    1880  0.019965  boy    E363\n",
       "Harry     1880  0.018175  boy    H600\n",
       "Walter    1880  0.014822  boy    W436\n",
       "Arthur    1880  0.013504  boy    A636\n",
       "Fred      1880  0.013251  boy    F630\n",
       "Albert    1880  0.012609  boy    A416\n",
       "Samuel    1880  0.008648  boy    S540\n",
       "David     1880  0.007339  boy    D130\n",
       "Louis     1880  0.006993  boy    L200\n",
       "Joe       1880  0.006174  boy    J000\n",
       "Charlie   1880  0.006165  boy    C640\n",
       "Clarence  1880  0.006165  boy    C465\n",
       "Richard   1880  0.006148  boy    R263\n",
       "Andrew    1880  0.005439  boy    A536\n",
       "Daniel    1880  0.005430  boy    D540\n",
       "Ernest    1880  0.005194  boy    E652\n",
       "Will      1880  0.004966  boy    W400\n",
       "Jesse     1880  0.004805  boy    J200\n",
       "Oscar     1880  0.004594  boy    O260\n",
       "Lewis     1880  0.004366  boy    L200\n",
       "...                  ...  ...     ...\n",
       "Landin    2008  0.000094  boy    L535\n",
       "Reagan    2008  0.000094  boy    R250\n",
       "Turner    2008  0.000094  boy    T656\n",
       "Arnav     2008  0.000094  boy    A651\n",
       "Brenton   2008  0.000094  boy    B653\n",
       "Callum    2008  0.000094  boy    C450\n",
       "Jayvion   2008  0.000094  boy    J150\n",
       "Bridger   2008  0.000093  boy    B632\n",
       "Sammy     2008  0.000093  boy    S500\n",
       "Deegan    2008  0.000093  boy    D250\n",
       "Jaylan    2008  0.000093  boy    J450\n",
       "Lennon    2008  0.000093  boy    L550\n",
       "Odin      2008  0.000093  boy    O350\n",
       "Abdiel    2008  0.000092  boy    A134\n",
       "Jerimiah  2008  0.000092  boy    J650\n",
       "Eliezer   2008  0.000092  boy    E426\n",
       "Bronson   2008  0.000091  boy    B652\n",
       "Cornelius 2008  0.000091  boy    C654\n",
       "Pierre    2008  0.000091  boy    P600\n",
       "Cortez    2008  0.000091  boy    C632\n",
       "Baron     2008  0.000090  boy    B650\n",
       "Carlo     2008  0.000090  boy    C640\n",
       "Carsen    2008  0.000090  boy    C625\n",
       "Fletcher  2008  0.000090  boy    F432\n",
       "Izayah    2008  0.000090  boy    I200\n",
       "Kolten    2008  0.000090  boy    K435\n",
       "Damari    2008  0.000089  boy    D560\n",
       "Hugh      2008  0.000089  boy    H200\n",
       "Jensen    2008  0.000089  boy    J525\n",
       "Yurem     2008  0.000089  boy    Y650\n",
       "\n",
       "[129000 rows x 3 columns]"
      ]
     },
     "execution_count": 111,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidf"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "name       year\n",
       "John       1880    0.081541\n",
       "William    1880    0.080511\n",
       "James      1880    0.050057\n",
       "Charles    1880    0.045167\n",
       "George     1880    0.043292\n",
       "Frank      1880    0.027380\n",
       "Joseph     1880    0.022229\n",
       "Thomas     1880    0.021401\n",
       "Henry      1880    0.020641\n",
       "Robert     1880    0.020404\n",
       "Edward     1880    0.019965\n",
       "Harry      1880    0.018175\n",
       "Walter     1880    0.014822\n",
       "Arthur     1880    0.013504\n",
       "Fred       1880    0.013251\n",
       "Albert     1880    0.012609\n",
       "Samuel     1880    0.008648\n",
       "David      1880    0.007339\n",
       "Louis      1880    0.006993\n",
       "Joe        1880    0.006174\n",
       "Charlie    1880    0.006165\n",
       "Clarence   1880    0.006165\n",
       "Richard    1880    0.006148\n",
       "Andrew     1880    0.005439\n",
       "Daniel     1880    0.005430\n",
       "Ernest     1880    0.005194\n",
       "Will       1880    0.004966\n",
       "Jesse      1880    0.004805\n",
       "Oscar      1880    0.004594\n",
       "Lewis      1880    0.004366\n",
       "Peter      1880    0.004189\n",
       "Benjamin   1880    0.004138\n",
       "Frederick  1880    0.004079\n",
       "Willie     1880    0.004020\n",
       "Alfred     1880    0.003961\n",
       "Sam        1880    0.003860\n",
       "Roy        1880    0.003716\n",
       "Herbert    1880    0.003581\n",
       "Jacob      1880    0.003412\n",
       "Tom        1880    0.003370\n",
       "Elmer      1880    0.003150\n",
       "Carl       1880    0.003142\n",
       "Lee        1880    0.003049\n",
       "Howard     1880    0.003015\n",
       "Martin     1880    0.003015\n",
       "Michael    1880    0.002990\n",
       "Bert       1880    0.002939\n",
       "Herman     1880    0.002931\n",
       "Jim        1880    0.002914\n",
       "Francis    1880    0.002905\n",
       "Name: prop, dtype: float64"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidf['prop'][:50]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>prop</th>\n",
       "      <th>sex</th>\n",
       "      <th>soundex</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1880</th>\n",
       "      <td>0.000186</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1881</th>\n",
       "      <td>0.000222</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1882</th>\n",
       "      <td>0.000098</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1883</th>\n",
       "      <td>0.000160</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1884</th>\n",
       "      <td>0.000179</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1885</th>\n",
       "      <td>0.000198</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1886</th>\n",
       "      <td>0.000092</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1887</th>\n",
       "      <td>0.000192</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1888</th>\n",
       "      <td>0.000169</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1889</th>\n",
       "      <td>0.000143</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1890</th>\n",
       "      <td>0.000184</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1891</th>\n",
       "      <td>0.000165</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1892</th>\n",
       "      <td>0.000152</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1893</th>\n",
       "      <td>0.000140</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1894</th>\n",
       "      <td>0.000200</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1895</th>\n",
       "      <td>0.000103</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1896</th>\n",
       "      <td>0.000108</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1897</th>\n",
       "      <td>0.000139</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1898</th>\n",
       "      <td>0.000182</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1899</th>\n",
       "      <td>0.000148</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1900</th>\n",
       "      <td>0.000148</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1901</th>\n",
       "      <td>0.000208</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1902</th>\n",
       "      <td>0.000151</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1903</th>\n",
       "      <td>0.000170</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1904</th>\n",
       "      <td>0.000087</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1905</th>\n",
       "      <td>0.000140</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1906</th>\n",
       "      <td>0.000180</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1907</th>\n",
       "      <td>0.000126</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1908</th>\n",
       "      <td>0.000150</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1909</th>\n",
       "      <td>0.000141</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1979</th>\n",
       "      <td>0.000782</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1980</th>\n",
       "      <td>0.000875</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1981</th>\n",
       "      <td>0.001059</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1982</th>\n",
       "      <td>0.001417</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1983</th>\n",
       "      <td>0.001635</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1984</th>\n",
       "      <td>0.001565</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1985</th>\n",
       "      <td>0.001675</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1986</th>\n",
       "      <td>0.002019</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1987</th>\n",
       "      <td>0.001986</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1988</th>\n",
       "      <td>0.002165</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1989</th>\n",
       "      <td>0.002351</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1990</th>\n",
       "      <td>0.002468</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1991</th>\n",
       "      <td>0.002573</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1992</th>\n",
       "      <td>0.002883</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1993</th>\n",
       "      <td>0.002948</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1994</th>\n",
       "      <td>0.002890</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1995</th>\n",
       "      <td>0.003029</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1996</th>\n",
       "      <td>0.002786</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1997</th>\n",
       "      <td>0.003008</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1998</th>\n",
       "      <td>0.003003</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1999</th>\n",
       "      <td>0.003363</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2000</th>\n",
       "      <td>0.003515</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2001</th>\n",
       "      <td>0.003513</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2002</th>\n",
       "      <td>0.003579</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2003</th>\n",
       "      <td>0.004500</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2004</th>\n",
       "      <td>0.004728</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2005</th>\n",
       "      <td>0.004756</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2006</th>\n",
       "      <td>0.004629</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2007</th>\n",
       "      <td>0.004657</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2008</th>\n",
       "      <td>0.004566</td>\n",
       "      <td>boy</td>\n",
       "      <td>E150</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>129 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          prop  sex soundex\n",
       "year                       \n",
       "1880  0.000186  boy    E150\n",
       "1881  0.000222  boy    E150\n",
       "1882  0.000098  boy    E150\n",
       "1883  0.000160  boy    E150\n",
       "1884  0.000179  boy    E150\n",
       "1885  0.000198  boy    E150\n",
       "1886  0.000092  boy    E150\n",
       "1887  0.000192  boy    E150\n",
       "1888  0.000169  boy    E150\n",
       "1889  0.000143  boy    E150\n",
       "1890  0.000184  boy    E150\n",
       "1891  0.000165  boy    E150\n",
       "1892  0.000152  boy    E150\n",
       "1893  0.000140  boy    E150\n",
       "1894  0.000200  boy    E150\n",
       "1895  0.000103  boy    E150\n",
       "1896  0.000108  boy    E150\n",
       "1897  0.000139  boy    E150\n",
       "1898  0.000182  boy    E150\n",
       "1899  0.000148  boy    E150\n",
       "1900  0.000148  boy    E150\n",
       "1901  0.000208  boy    E150\n",
       "1902  0.000151  boy    E150\n",
       "1903  0.000170  boy    E150\n",
       "1904  0.000087  boy    E150\n",
       "1905  0.000140  boy    E150\n",
       "1906  0.000180  boy    E150\n",
       "1907  0.000126  boy    E150\n",
       "1908  0.000150  boy    E150\n",
       "1909  0.000141  boy    E150\n",
       "...        ...  ...     ...\n",
       "1979  0.000782  boy    E150\n",
       "1980  0.000875  boy    E150\n",
       "1981  0.001059  boy    E150\n",
       "1982  0.001417  boy    E150\n",
       "1983  0.001635  boy    E150\n",
       "1984  0.001565  boy    E150\n",
       "1985  0.001675  boy    E150\n",
       "1986  0.002019  boy    E150\n",
       "1987  0.001986  boy    E150\n",
       "1988  0.002165  boy    E150\n",
       "1989  0.002351  boy    E150\n",
       "1990  0.002468  boy    E150\n",
       "1991  0.002573  boy    E150\n",
       "1992  0.002883  boy    E150\n",
       "1993  0.002948  boy    E150\n",
       "1994  0.002890  boy    E150\n",
       "1995  0.003029  boy    E150\n",
       "1996  0.002786  boy    E150\n",
       "1997  0.003008  boy    E150\n",
       "1998  0.003003  boy    E150\n",
       "1999  0.003363  boy    E150\n",
       "2000  0.003515  boy    E150\n",
       "2001  0.003513  boy    E150\n",
       "2002  0.003579  boy    E150\n",
       "2003  0.004500  boy    E150\n",
       "2004  0.004728  boy    E150\n",
       "2005  0.004756  boy    E150\n",
       "2006  0.004629  boy    E150\n",
       "2007  0.004657  boy    E150\n",
       "2008  0.004566  boy    E150\n",
       "\n",
       "[129 rows x 3 columns]"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidf.ix['Evan']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "year\n",
       "1880    0.000186\n",
       "1881    0.000222\n",
       "1882    0.000098\n",
       "1883    0.000160\n",
       "1884    0.000179\n",
       "1885    0.000198\n",
       "1886    0.000092\n",
       "1887    0.000192\n",
       "1888    0.000169\n",
       "1889    0.000143\n",
       "1890    0.000184\n",
       "1891    0.000165\n",
       "1892    0.000152\n",
       "1893    0.000140\n",
       "1894    0.000200\n",
       "1895    0.000103\n",
       "1896    0.000108\n",
       "1897    0.000139\n",
       "1898    0.000182\n",
       "1899    0.000148\n",
       "1900    0.000148\n",
       "1901    0.000208\n",
       "1902    0.000151\n",
       "1903    0.000170\n",
       "1904    0.000087\n",
       "1905    0.000140\n",
       "1906    0.000180\n",
       "1907    0.000126\n",
       "1908    0.000150\n",
       "1909    0.000141\n",
       "          ...   \n",
       "1979    0.000782\n",
       "1980    0.000875\n",
       "1981    0.001059\n",
       "1982    0.001417\n",
       "1983    0.001635\n",
       "1984    0.001565\n",
       "1985    0.001675\n",
       "1986    0.002019\n",
       "1987    0.001986\n",
       "1988    0.002165\n",
       "1989    0.002351\n",
       "1990    0.002468\n",
       "1991    0.002573\n",
       "1992    0.002883\n",
       "1993    0.002948\n",
       "1994    0.002890\n",
       "1995    0.003029\n",
       "1996    0.002786\n",
       "1997    0.003008\n",
       "1998    0.003003\n",
       "1999    0.003363\n",
       "2000    0.003515\n",
       "2001    0.003513\n",
       "2002    0.003579\n",
       "2003    0.004500\n",
       "2004    0.004728\n",
       "2005    0.004756\n",
       "2006    0.004629\n",
       "2007    0.004657\n",
       "2008    0.004566\n",
       "Name: prop, dtype: float64"
      ]
     },
     "execution_count": 114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bidf.ix['Evan']['prop']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAhIAAAF5CAYAAADK5sO7AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAIABJREFUeJzt3XmYFNXZ9/HvzQ4qoCAgihI3XIOCRIjBXXHfoxk1EtTE\n9dGgPkaziEvUmERQH0Vcg0YlrxERRJEIalADGmcEhRlAVBSIICj7zsz9/nG6Mz3t9Ex3MzPV3fP7\nXFdfQ1edqrrrTNN1z6lzTpm7IyIiIpKNJlEHICIiIvlLiYSIiIhkTYmEiIiIZE2JhIiIiGRNiYSI\niIhkTYmEiIiIZE2JhIiIiGRNiYSIiIhkTYmEiIiIZE2JhIiIiGQtq0TCzK4ys8/NbL2ZTTOzPrWU\nP9LMis1sg5nNNbOB1ZT5sZmVxfY5w8xOTFo/xMwqkl6l2cQvIiIidSPjRMLMzgPuBYYABwMzgIlm\n1jFF+e7AeGAy0BO4H3jczI5LKPND4DngMeAgYCzwkpntl7S7mUBnoEvs9aNM4xcREZG6Y5k+tMvM\npgHvufu1sfcGLAAecPc/VlP+HuBEd/9+wrJRQDt3Pyn2/m9AG3c/LaHMVOBDd78y9n4IcLq798rw\nHEVERKSeZNQiYWbNgd6E1gUAPGQik4B+KTbrG1ufaGJS+X5plAHYy8wWmdmnZvaMmXXLJH4RERGp\nW5ne2ugINAWWJC1fQrjVUJ0uKcq3NbOWtZRJ3Oc04GfAAOBy4HvAFDPbJoP4RUREpA41izqAdLn7\nxIS3M83sfeAL4FzgL8nlzawDIemYD2xoiBhFREQKRCugOzDR3b+pqWCmicQyoJzQ4TFRZ2Bxim0W\npyi/yt031lIm1T5x95VmNhfYM0WRAcCzqbYXERGRWl1AGAyRUkaJhLtvNrNi4BhgHPy3s+UxwAMp\nNpsKnJi07PjY8sQyyfs4LqlMFWa2LSGJeDpFkfkAzzzzDPvuu2+q3TR6gwcPZtiwYVGHkdNURzVT\n/dROdVQ71VHNGrp+ysrKuPDCCyF2La1JNrc2hgIjYwnF+8BgoA0wEsDM7ga6unt8rogRwFWx0RtP\nEhKGc4CTEvZ5P/CWmV0HvAIUETp1/jxewMz+BLxMuJ2xM3AbsBkYlSLODQD77rsvvXppoEcq7dq1\nU/3UQnVUM9VP7VRHtVMd1SzC+qm1a0DGiYS7Px+bM+J2wu2H6cAAd18aK9IF6JZQfr6ZnQwMA64B\nFgKXuPukhDJTzex84M7Y6xPCUM/ECad2ITSvdACWAu8AfWu7dyMiIiL1J6vOlu4+HBieYt2gapZN\nIbQw1LTP0cDoGtYXZRimiIiI1DM9a0NERESypkSikSsqUkNPbVRHNVP91E51VDvVUc1yuX4yniI7\nX5hZL6C4uLhYHXhEREQyUFJSQu/evQF6u3tJTWXVIiEiIiJZUyIhIiIiWVMiISIiIllTIiEiIiJZ\nUyIhIiIiWVMiISIi0khUVNT9PpVIiIiIFLiPPoKiImjTBqamfBxmdpRIiIiIFKiZM+G006Bnz5BA\ndO4Md91Vt8dQIiEiIlKgzj4bSkvhqafgk0/g9tth/HiYNavujqFEQkREpAAtWABz58I998BFF0Hz\n5uH2xs47w5//XHfHUSIhIiJSgN58M/w88sjKZS1awODB8OyzsHBh3RxHiYSIiEgBeuMNOOgg6NCh\n6vKf/zx0urz//ro5jhIJERGRAuMeEomjjvruurZt4Yor4JFHYMUK2LQJnngiJB0PP5z5sZRIiIiI\nFJhPPw19JI4+uvr1114LGzfChRfCHnvApZfC+vVw/fVh20wokRARESkwb7wBTZvC4YdXv75LF7j4\nYnjttdBqMWsWlJSE4aG/+EVo0UhXs7oJWURERHLFm2/CIYeE2xip3Hcf3HYbdOpUueyRR2DAABg3\nLv1jqUVCRESkgMT7R6S6rRHXsmXVJALg+ONh4EAYOjT94ymREBERKSClpfD119V3tEzHvfdCswzu\nVyiREBERKSBvvBEmnzrssOy279ABfvWr9MsrkRARESkgb7wB/fqFuSKyddxx6ZdVIiEiIlIgysvh\nn/+svX9EbczSL6tEQkREpEDMmAHLl2ffPyIbSiREREQKxNSpoX/EoYc23DGVSIiIiBSIZcugY8cw\ntLOhKJEQEREpECtWQPv2DXtMJRIiIiIFQomEiIiIZG3FCth++4Y9phIJERGRArF8uVokREREJEu6\ntSEiIiJZ060NERERyZpubYiIiEhWysth1SolEiIiIpKFVavCTyUSIiIikrEVK8JP9ZEQERGRjC1f\nHn6qRUJEREQyFm+RUCIhIiIiGdOtDREREcla/NZG27YNe1wlEiIiIgVgxQrYbjto1qxhj6tEQkRE\npABEMT02KJEQEREpCFFMjw1KJERERApCFNNjgxIJERGRgqBbGyIiIpI13doQERGRrOnWhoiIiGRN\n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\nERGRNEyfHm5rZJMING0a5prYffe6jytqapEQERFJQzYdLRMdeWSY6bLQKJEQERGpxYoV8Pnn2XW0\nLHRKJERERGoxY0b4uTUtEoVKiYSIiEgtpk8PT+zs0SPqSHKPEgkREZFafPhhGHnRTEMUvkOJhIiI\nSC3iU2PLdymREBERqcGmTVBaqo6WqSiREBERqcGsWbB5s1okUlEiISIiUoPp08MkVAceGHUkuUmJ\nhIiISA0+/BD22gu23TbqSHKTEgkREZEaqKNlzZRIiIiIpLB5c5iMSh0tU1MiISIiksKjj8Lq1XDy\nyVFHkruUSIiIiFRj5Uq49VYYNEgdLWuiREJERKQad90F69bBHXdEHUluUyIhIiKSZP58uO8++N//\nha5do44mtymREBERSXLzzdChQ0gkpGZ6/IiIiEiC996Dv/0NnngCttkm6mhyn1okREREEtx0E3z/\n+zBwYNSR5Ae1SIiIiMS89VZ4jR0LTZtGHU1+UIuEiIhIzK23hlksTz016kjyh1okRERECC0R//xn\naI0wizqa/KEWCREREdQakS21SIiISKP35ptqjciWWiRERKRRc1drxNZQi4SIiDRqU6fClClqjciW\nWiRERKRRe/75MA32KadEHUl+UiIhIiKNljuMGQNnnAFNdEXMiqpNREQarenT4csv4cwzo44kfymR\nEBGRRmvMGGjfHo44IupI8pcSCRERabTGjAl9I5o3jzqS/KVEQkREGqV582DmTN3W2FpKJEREpFF6\n6SVo1QoGDIg6kvymREJERBqlMWNCErHNNlFHkt+USIiISKOzeHGYiOqMM6KOJP8pkRARkUZn3Lgw\nb4SmxN56SiRERKTRGTMGDj8cOnSIOpL8p0RCREQalZUrYfJkjdaoK0okRESkUXn5Zdi8Gc46K+pI\nCoMSCRERaVReeAH69YOdd446ksKgREJERBqN1avhtdfgnHOijqRwKJEQEZFG45VXYONGOPvsqCMp\nHFklEmZ2lZl9bmbrzWyamfWppfyRZlZsZhvMbK6ZDaymzI/NrCy2zxlmdmLS+pvN7H0zW2VmS8xs\njJntnU38IiLSOI0eDX36wG67RR1J4cg4kTCz84B7gSHAwcAMYKKZdUxRvjswHpgM9ATuBx43s+MS\nyvwQeA54DDgIGAu8ZGb7JeyqP/B/wKHAsUBz4B9m1jrTcxARkcZn7Vp49VW1RtS1bFokBgOPuPvT\n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\nJkD37lFHL5IBdy/IF9AL8GbNiv23v3Vfvdp9993dzznHa1RR4T59uvvvfue+337u4fLtfsMN3y27\nfr17jx7uO+8cyn/+eer9rl3r/oc/uI8Y4b54cc0xJJo1y33HHUMMf/tb+tvFz+X5592Li2suV1zs\n3q6d+z77uJu5DxzovmVLZsdK3t/ChdlvX1eKi8Pv2yzUX48e7n/9q/vmzVFHJoWstNT9pz91b97c\nvU0b98suc//gg/D/USRfFBcXO+BAL6/teltbgXx9xROJ0aMrr6IjRoSLyuzZVSusosL9/ffdb7zR\nfY89Qq20axe+DF56yf3mm91btPhuonDnne7Nmrn/7Gfu220X9n388e7jx7uXl1eW++CDcBFr0cK9\naVP3Jk3cDz/cfdiwcNyNG6v/Rc6e7d65s/uBB7qfeKJ7167uq1ZVXzbZt9+6n3lmOBcz94svdv/q\nq++Wmz7dfYcd3A891H3lSvdnnw0xFhWFC+6GDeF8Lr3Uffjwmo+5bp37tdeGY3buHPZdVxYscD/l\nFPeePUOCt/fe7n36uD/xRIgxbssW91decT/hhBDH7ru7P/qo+7vvhu3Bfa+93C+80P3ss91POsn9\n9NPd//3vzGNavNh96dK6O0fJPRUV7vPnh++B++6r+Y+FL75wHzQo/P/edVf3P/85/D8UyUdKJBIS\nieKEP8fXr3fv0sX9kksqK6uiwn3w4FATHTuGC+aECVUv7mvWuO+0U7i4xi1YEP7auO668H71avcn\nnwwXt/hfvw8/7P7734dko1ev8JfK0qXujz8eEoMWLULZFi3Chfyaa8KFfN48908+CYnDfvu5L1kS\nvqTatHG//vpaf//+7rvhi2z77d1feCEkADvsEJKd225zHzkyvB59NJxzr17uy5dXbv/CCyHmnj3d\n27atTAyaNHF/553qj/nee+GcW7Z0v+uusM927dzffruyzJYt7q++6n7vve7jxrnPnRuSldWrQ9Lx\n4oshruRkafr00OrTrZv7VVeFZOWGG9xPOy0kSTvt5H7PPeG43buHeA8+2P25577b+vDBB+7nnhsS\nueOPD0nEAQeE5OmWW9w3bapa/ptvqsZTXu4+caL7GWeEbVq3dv/1r91XrKi63dq17nPmhORKcsf6\n9eH/U00tbnPnhqRhwAD39u39v62STZtWJtklJeG749NP3Z95JnxvtGgRWg8feKBqciuSj5RIpEgk\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11496ca10>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bidf.ix['Evan']['prop'].plot();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAhIAAAF5CAYAAADK5sO7AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAIABJREFUeJzs3Xd4VGXax/HvLb0IqCjRFQUbigUJiqKADUQQrKBiXbCL\nLa51ddW1s64iFrAgayWWRQGx4IIFUNDdoCiCgqugsgKiCCrSn/ePe/IyDJkkM0xyJpnf57pyxTnn\nOWfueQwz9zzVQgiIiIiIpGOzqAMQERGRqkuJhIiIiKRNiYSIiIikTYmEiIiIpE2JhIiIiKRNiYSI\niIikTYmEiIiIpE2JhIiIiKRNiYSIiIikTYmEiIiIpC2tRMLMBpjZ12b2u5lNNbP9yyh/qJkVmdkK\nM5ttZmeVUKaPmc2K3XO6mXUvocx2Zva0mS02s+WxcvnpvAYRERHZdCknEmZ2MnAPcBPQFpgOjDOz\npknKtwDGAhOANsBgYJiZdY0rcxAwAngM2BcYDYwys9ZxZZoA7wErgW7AHsCfgCWpvgYRERHJDEt1\n0y4zmwp8EEK4LPbYgG+B+0MIfyuh/ECgewhhn7hjhUDjEEKP2OPngPohhGPiykwBPgohXBR7fBfQ\nIYRwSIqvUURERCpISi0SZlYLaIe3LgAQPBMZD3RIctmBsfPxxiWU71COMr2A/5jZC2a20Mymmdk5\nqcQvIiIimZVq10ZToAawMOH4QiAvyTV5Sco3MrM6ZZSJv+dOwIXAF8CRwFDgfjM7I5UXICIiIplT\nM+oAUrAZ8GEI4S+xx9PNbC/gAuDpxMJmthU+lmIusKKyghQREakG6gItgHEhhB9LK5hqIrEYWAs0\nSzjeDFiQ5JoFScovCyGsLKNM/D2/B2YllJkFnJDkebsBzyY5JyIiImU7DZ8MkVRKiUQIYbWZFQFH\nAGPg/wdbHgHcn+SyKUDiVM4jY8fjyyTeo2tCmfeAVgn3aQXMS/K8cwGeeeYZ9thjjyRFpKCggEGD\nBkUdRlZTHZVO9VM21VHZVEelq+z6mTVrFqeffjrEPktLk07Xxr3AE7GE4kOgAKgPPAFgZncC24UQ\niteKeBgYEJu9MRxPGHoDPeLuORh4x8yuAF4F+uKDOs+NKzMIeM/MrgNeAA4AzkkoE28FwB577EF+\nvpaaSKZx48aqnzKojkqn+imb6qhsqqPSRVg/ZQ4NSDmRCCG8EFsz4ha8++FjoFsI4YdYkTygeVz5\nuWZ2NJ4IXAp8B5wdQhgfV2aKmZ0K3B77mQMcG0KYGVfmP2Z2PHAX8Bfga+CyEMJzqb4GERERyYy0\nBluGEIYAQ5Kc61fCsYl4C0Np9xwJjCyjzGvAa+WPVERERCqS9toQERGRtCmRyHF9+/aNOoSspzoq\nneqnbKqjsqmOSpfN9ZPyEtlVRWwzr6KioiIN4BEREUnBtGnTaNeuHUC7EMK00sqqRUJERETSpkRC\nRERE0qZEQkRERNKmREJERETSpkRCRERE0qZEQkRERNKmREJERETSpkRCRERE0qZEQkRERNKmREJE\nRETSpkRCRERE0qZEQkRERNKmREJERETSpkRCRERE0qZEQkRERNKmREJERETSpkRCRERE0qZEQkRE\nRNKmREJERETSpkRCRERE0qZEQkRERNKmREJERETSpkRCRERE0qZEQkRERNKmREJERETSpkRCRERE\n0qZEQkRERNJWM+oARESqgiVL4N//hg8/hA8+gJ13hvvuizoqkegpkRARKUFhIbz0EsydC19/DT/+\n6MebNIG8PBg3Du68E+rVizRMkcgpkRARKcE110D9+tCxIxx3HOy0E7RrB7vuCp98Avvu6y0UnTtH\nHalItJRIiIgkWLoUvv0WnnkGTjtt4/N77QWNGsF77ymRENFgSxGRBJ995r/32qvk8zVqwIEHeiKR\naO1aeOutiotNJNsokRARSTBjhicLrVolL3PwwfD++7Bu3YbHR4yAI46Ajz+u2BhFsoUSCRGRBDNm\n+FiIunWTlzn4YJ/J8fnnGx4fOdJ/v/lmxcUnkk2USIiIJJgxA/beu/QyBxzgrRbx3Ru//uqzOTbb\nDP71r4qNUSRbKJEQEYkTAnz6afLxEcUaNoQ2bTZMJF5/HVasgIsugkmT4PffKzZWkWygREJEJM6i\nRbB4cdmJBHj3Rnwi8dJL0LYtnHcerFwJkydXXJwi2UKJhIhInBkz/Hd5E4kvv4SFC70lYuxYOOEE\nvzYvT90bkhvSSiTMbICZfW1mv5vZVDPbv4zyh5pZkZmtMLPZZnZWCWX6mNms2D2nm1n3hPM3mdm6\nhJ+Z6cQvIpLMjBlQp44vgV2Wgw/23++/D+PH+xiJE04AM+jaVYmE5IaUEwkzOxm4B7gJaAtMB8aZ\nWdMk5VsAY4EJQBtgMDDMzLrGlTkIGAE8BuwLjAZGmVnrhNvNAJoBebGfjqnGLyJSmhkzoHVrH0hZ\n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\nIiDDk1dERERyz2WXwTXXwBVX+O6h6Uina6MAeCSE8BSAmV0AHA30B0pqHLkQ+CqEcHXs8Rdm1jF2\nn3/Fjl0KvB5CuDf2+MZYonExnjgQQngDeCP2nJZG3CIiIpLgzjvh++/hrLNg882hZ8/Urk+pRcLM\nagHt8NYFAEIIARgPdEhy2YGx8/HGJZTvUI4yIiIikmFmMGyYJxDHHuvdHalMDU21RaIpUANYmHB8\nIdAqyTV5Sco3MrM6IYSVpZTJSzE+ERERSVGtWvDii75YVUEBnHBC+a/VrA0RERGhRg2fvbH77nD+\n+eW/LtVEYjGwFmiWcLwZsCDJNQuSlF8Wa40orUyye5ZbQUEBjRs33uBY37596du376beWkREpMor\nLCykMGGkZevWS8u9wZeFFNfINLOpwAchhMtijw34Brg/hHB3CeXvArqHENrEHRsBNAkh9Ig9fg6o\nF0I4Nq7Me8D0EMJFJdxzHXBcCGFMKXHmA0VFRUXk5+en9BpFRERy2bRp02jXrh1AuxDCtNLKptO1\ncS/whJkVAR/isy/qA08AmNmdwHYhhOK1Ih4GBpjZQGA4cATQG+gRd8/BwDtmdgXwKtAXH9R5bnEB\nM2sA7AIUz9jYyczaAD+FEL5N43WIiIjIJko5kQghvBBbM+IWvPvhY6BbCOGHWJE8oHlc+blmdjQw\nCJ/m+R1wdghhfFyZKWZ2KnB77GcOcGwIYWbcU+8HvI2vIRHwtSwAnsSnnoqIiEglS2uwZQhhCDAk\nybl+JRybiLcwlHbPkcDIUs6/i3YrFRERySr6YBYREZG0KZEQERGRtCmREBERkbQpkRAREZG0KZEQ\nERGRtCmREBERkbQpkRAREZG0KZEQERGRtCmREBERkbQpkRAREZG0KZEQERGRtCmREBERkbQpkRAR\nEZG0KZEQERGRtCmREBERkbQpkRAREZG0KZEQERGRtCmREBERkbQpkRAREZG0KZEQERGRtCmREBER\nkbQpkRAREZG0KZEQERGRtCmREBERkbQpkRAREZG0KZEQERGRtCmREBERkbQpkRAREZG0KZEQERGR\ntCmREBERkbQpkRAREZG0KZEQERGRtCmREBERkbQpkRAREZG0KZEQERGRtCmREBERkbQpkRAREZG0\nKZEQERGRtCmREBERkbQpkRAREZG0KZEQERGRtKWVSJjZADP72sx+N7OpZrZ/GeUPNbMiM1thZrPN\n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\ngg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11496cbd0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bidf.ix['Peter']['prop'].plot();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11a7c38d0>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "gidf = girls.set_index(['name', 'year'])\n",
    "gidf.ix['Hillary']['prop'].plot();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAhIAAAF5CAYAAADK5sO7AAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAIABJREFUeJzs3Xd8VFX6x/HPIfQuRQKKAhYQlRIEKYqisCKKFVQUVwE7\nNnRtP+vaWVTEhihiJ5ZFARVFwQIIWBJAEAQsICAdBaRDzu+PJ1mGkEkywyR3JvN9v155Zefec+88\nMyuZZ855zjnOe4+IiIhINEoFHYCIiIgkLiUSIiIiEjUlEiIiIhI1JRIiIiISNSUSIiIiEjUlEiIi\nIhI1JRIiIiISNSUSIiIiEjUlEiIiIhI1JRIiIiIStagSCedcf+fcb865Lc656c651gW0P9E5l+Gc\n2+qcW+CcuySPNj2dc/Oy7znLOXdqHm3qOeded86tcc5tzm6XFs1rEBERkX0XcSLhnDsfeBy4F2gJ\nzALGO+dqhWnfAPgQmAg0B4YAw51zXULatAdGAi8CLYAxwGjnXNOQNtWBr4FtwCnAEcDNwJ+RvgYR\nERGJDRfppl3OuenAN977G7IfO2AJ8JT3/j95tB8InOq9bxZyLB2o5r3vlv34LaCi9/6MkDbTgBne\n+2uyHz8KtPPenxDhaxQREZEiElGPhHOuDNAK610AwFsmMgFoF+ayttnnQ43P1b5dIdp0B753zr3j\nnFvpnMt0zl0WSfwiIiISW5EObdQCUoCVuY6vBFLDXJMapn1V51y5AtqE3rMRcDUwH/gHMBR4yjl3\ncSQvQERERGKndNABRKAU8K33/u7sx7Occ0cBVwGv527snKuJ1VIsArYWV5AiIiIlQHmgATDee782\nv4aRJhJrgF1AnVzH6wArwlyzIkz7Dd77bQW0Cb3ncmBerjbzgHPCPO8pwJthzomIiEjBLsImQ4QV\nUSLhvd/hnMsATgbGwv+KLU8Gngpz2TQg91TOf2QfD22T+x5dcrX5Gmic6z6NgcVhnncRwBtvvMER\nRxwRpokMGDCAwYMHBx1GXNN7lD+9PwXTe1QwvUf5K+73Z968efTu3RuyP0vzE83QxhPAK9kJxbfA\nAKAi8AqAc+4RoJ73PmetiOeB/tmzN0ZgCUMPoFvIPYcAXzrnbgI+AnphRZ2Xh7QZDHztnLsDeAc4\nFrgsV5tQWwGOOOII0tK01EQ41apV0/tTAL1H+dP7UzC9RwXTe5S/AN+fAksDIk4kvPfvZK8ZcT82\n/DATOMV7vzq7SSpQP6T9IufcaVgicD2wFOjnvZ8Q0maac+5C4KHsn4XAmd77uSFtvnfOnQ08CtwN\n/Abc4L1/K9LXICIiIrERVbGl9/454Lkw5/rkcWwS1sOQ3z1HAaMKaDMOGFf4SEVERKQoaa8NERER\niZoSiSTXq1evoEOIe3qP8qf3p2B6jwqm9yh/8fz+RLxEdqLI3swrIyMjQwU8IiIiEcjMzKRVq1YA\nrbz3mfm1VY+EiIiIRE2JhIiIiERNiYSIiIhETYmEiIiIRE2JhIiIiERNiYSIiIhETYmEiIiIRE2J\nhIiIiERNiYSIiIhETYmEiIiIRE2JhIiIiERNiYSIiIhETYmEiIiIRE2JhIiIiERNiYSIiIhETYmE\niIiIRE2JhIiIiERNiYSIiIhETYmEiIiIRE2JhIiIiERNiYSIiIhETYmEiIiIRE2JhIiIiERNiYSI\niIhETYmEiIiIRE2JhIiIiERNiYSIiIhErXTQAYiIJII//4TvvoNvv4VvvoFDDoEnnww6KpHgKZEQ\nEclDejq89x4sWgS//QZr19rx6tUhNRXGj4dHHoEKFQINUyRwSiRERPJw221QsSIcdxycdRY0agSt\nWsFhh8EPP0CLFtZD0bFj0JGKBEuJhIhILuvXw5Il8MYbcNFFe58/6iioWhW+/lqJhIiKLUVEcvnx\nR/t91FF5n09JgbZtLZHIbdcu+PzzootNJN4okRARyWXOHEsWGjcO36ZDB5g6FbKy9jw+ciScfDLM\nnFm0MYrECyUSIiK5zJljtRDly4dv06GDzeT46ac9j48aZb8//bTo4hOJJ0okRERymTMHjj46/zbH\nHmu9FqHDG3//bbM5SpWCzz4r2hhF4oUSCRGREN7D7Nnh6yNyVK4MzZvvmUh8/DFs3QrXXAOTJ8OW\nLUUbq0g8UCIhIhJi1SpYs6bgRAJseCM0kXjvPWjZEq64ArZtgylTii5OkXihREJEJMScOfa7sInE\nzz/DypXWE/Hhh3DOOXZtaqqGNyQ5RJVIOOf6O+d+c85tcc5Nd861LqD9ic65DOfcVufcAufcJXm0\n6emcm5d9z1nOuVNznb/XOZeV62duNPGLiIQzZw6UK2dLYBekQwf7PXUqTJhgNRLnnAPOQZcuSiQk\nOUScSDjnzgceB+4FWgKzgPHOuVph2jcAPgQmAs2BIcBw51yXkDbtgZHAi0ALYAww2jnXNNft5gB1\n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\n5ZfbfUQAxswfQ/fDu5NSKmWP460PaM2FR1/I3V/czd/b/2bbzm28NectTht5Gm/PeTvi51EiISJF\nYuRIG85o1273sXr14Lzz4KmnbNbCypXw9tvQv7/td3HBBfDmm3vPaJg40T4oC2PnThtOOfZYuOSS\n2L2eWKpa1YYkQhOJYcOsePKOOyK/X1oavPii1VfEus5EEtP8NfOZv3Y+ZzbJY1Uz4KGTHmLtlrWc\nNvI0DnjiAHqN6sXslbO5dMylzFoxK6LnUiIhIjH39982++DCC/c+d+ONsGiRfYi+8IJ9M+/b185d\nfLHVNnz55e72X3wBXbpY3cDOnQU/97Bh1hPy9NPBLj5VkO7d7XVu3GhLdt90k/XYnH56dPc7+2zr\nkbjhBliwIKahSgIaM38MFUpXoHOjznmeb1C9Abd3uJ15q+dxaYtLmdd/HvOvnc8RtY7g3HfOZeO2\njYV+LhfLKSDxxDmXBmRkZGSQlpYWdDgiSWXkSLjoIvjtN2jQYO/zxx1nv3/91T5Qhw2zx95bYWS7\ndvDqq9Zj0aIFpKbCrFnw2GP2gZvbH3/A2LH2jXziROuJGD68yF5eTPz2m9U5jBwJ//mPTVXNyLC6\njmht2mS9E1WqwNSptjeHJKcOIzpQu2JtRl8wOqLrfv3zV1q90IpmWc2Y9H+TAFp57zPzuyaO83UR\nSVQjR0KHDnknEWC9El9/bftFXHvt7uPOWa/EqFH2Tb13b0suPv7Y2t19954Fitu3Q79+Nnvh2mth\nxw544om8Z4bEm4YN4cgj4cor4ccf7T3blyQCoFIlGxqaNcs2J5PktPLvlUxbMo0zG+c9rJGfRvs1\n4rWzXmPSokmFvkaJhIjE1Jo1tm5EXsMaOc46Cw4+2JatPvroPc/17m3frLt2td6FN9+0HokHH7T9\nJ/r3t+Ri40brzXjjDau5WLXK2l93XeG26Y4H3bvb63j44dhtC37MMXD99fD88yq8TFYfLrBFSk4/\nPLpxsu6Nu9O3Zd9Ct1ciISIx9e679gHWs2f4NqVL24f+yJF7n2vY0IY+pk61HoiTT7bjVavCM8/Y\n8tJDh0KnTrZS5iefWPJQo0bRvJ6idOONtmhWXsM1+6JrV1i71movJPmMmT+G9vXbU7tS7ajvcdUx\nVxW6rRIJEYmpkSPhH/+A2gX8DTvkEKhbN+9z999vQxX33LPn8bPOsq21+/e3uohJkyyhSFR16ljv\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11a7c3310>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bidf.ix['Peter']['prop'].plot()\n",
    "bidf.ix['Evan']['prop'].plot();"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n8oQv6jbqgXYAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11ab28b50>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "bidf.ix['Peter']['prop'].plot(label = 'Peter')\n",
    "bidf.ix['Evan']['prop'].plot(label = 'Evan')\n",
    "plt.legend();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "OK, let's see if we can understand how people's baby naming habits change over time.\n",
    "\n",
    "We start by grouping the data by year."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "grouped = boys.groupby('year')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "From here, there are a lot of things we can do with the data set."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "year\n",
       "1880    0.000118\n",
       "1881    0.000120\n",
       "1882    0.000115\n",
       "1883    0.000116\n",
       "1884    0.000122\n",
       "1885    0.000121\n",
       "1886    0.000118\n",
       "1887    0.000119\n",
       "1888    0.000123\n",
       "1889    0.000118\n",
       "1890    0.000125\n",
       "1891    0.000119\n",
       "1892    0.000122\n",
       "1893    0.000124\n",
       "1894    0.000136\n",
       "1895    0.000130\n",
       "1896    0.000132\n",
       "1897    0.000131\n",
       "1898    0.000136\n",
       "1899    0.000139\n",
       "1900    0.000136\n",
       "1901    0.000138\n",
       "1902    0.000143\n",
       "1903    0.000147\n",
       "1904    0.000137\n",
       "1905    0.000147\n",
       "1906    0.000146\n",
       "1907    0.000139\n",
       "1908    0.000150\n",
       "1909    0.000153\n",
       "          ...   \n",
       "1979    0.000155\n",
       "1980    0.000153\n",
       "1981    0.000151\n",
       "1982    0.000153\n",
       "1983    0.000149\n",
       "1984    0.000153\n",
       "1985    0.000158\n",
       "1986    0.000158\n",
       "1987    0.000163\n",
       "1988    0.000168\n",
       "1989    0.000175\n",
       "1990    0.000179\n",
       "1991    0.000185\n",
       "1992    0.000192\n",
       "1993    0.000201\n",
       "1994    0.000198\n",
       "1995    0.000211\n",
       "1996    0.000208\n",
       "1997    0.000208\n",
       "1998    0.000212\n",
       "1999    0.000211\n",
       "2000    0.000218\n",
       "2001    0.000220\n",
       "2002    0.000223\n",
       "2003    0.000235\n",
       "2004    0.000230\n",
       "2005    0.000232\n",
       "2006    0.000237\n",
       "2007    0.000238\n",
       "2008    0.000250\n",
       "Name: prop, dtype: float64"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "grouped['prop'].median()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\nM2oARo2Ciy+GCy+EAw9M7X21dLyIiIj8T34+tG0L9evDTTfB+PFw//1Qr573ilx2GQwdmvr7KiAR\nERGR/8nPL96td4cdvEfkppt8J9/rr4ebb67a0vCV0ZCNiIiIABBCyYAE4JprYMcd4e9/hyFDqicY\nAfWQiIiISMz338OSJSUDkhYt4Msvq//e6iERERERwHtHoGRAki4KSERERATwgGSzzTx3JN0UkIiI\niAjgAclee1VfnkhFFJCIiIgIsH5CazopIBERERHWrIGCAgUkIiIiEqEvvvCgRAGJiIiIRCbKGTag\ngERERETwgGTrrX2X3ygoIBEREZFIE1pBAYmIiIiggEREREQitnQpfPONAhIRERGJ0OzZ/l0BiYiI\niERi6VLo1w923hn23DO6emi3XxERkVpq7Vo44wzf5XfGDKhfP7q6KCARERGppS6/HKZOhcmTYffd\no62LAhIREZFaaORIeOABGDUKunSJujbKIREREal1Ro+GAQPg0kvhoouiro1TQCIiIlKLDBsG55/v\ngcjQoVHXppgCEhERkVogBBgyBAYNgsGDYcQI2CiDooAMqoqIiIhUlxEj4MYb4bbb4M47wSzqGpWk\npFYREZFaYPRoOO00uOaaqGtSNvWQiIiIZLnvvoM5c+Ckk6KuSfkUkIiIiGS5V16BunWha9eoa1I+\nBSQiIiJZbtIkOOwwaNIk6pqUTwGJiIhIFlu+HN58E3r2jLomFVNAIiIiksXeeANWr1ZAIiIiIhF6\n+WXYYw/fzTeTKSARERHJUuvWwauvZn7vCCggERERyVozZ8LPPysgERERkTR68UXvEQnBf540CZo3\nhwMPjLZeidBKrSIiIlng//4PTj0V1q6FvfeGq6/2/JFu3aBOnahrVzn1kIiIiGSwu+9ObFfeG2+E\nLbeEqVNhm23gzDPh00/huOOqv46poB4SERGRDDZ6NHz1FXToAIcfXnaZ/HwYPx5GjoQuXfwrLw8m\nT4YePdJb36pSQCIiIpKhVq3yoZhNNoE+fXw/mqZN1y937bWw005w3nnFx3Jy/Kum0JCNiIhIhvri\nCygshIcfht9+gwED1i/zwQeevDpkCNSrl/46pooCEhERkQxVUODfu3b14Zhx42DChOLXQ4BrroF2\n7eCMM6KpY6poyEZERCRDzZsHLVpAs2bQu7fv2nvxxT61F2DFCnj7be8h2aiGdzEoIBEREclQBQW+\n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\nRCRy/w/Tlg+hCmNhfwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11ab20290>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "grouped['prop'].median().plot();"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let's see how many names it takes to get to 50%."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "127"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cs = boys[boys.year == 2008]['prop'].cumsum()\n",
    "cs.values.searchsorted(0.5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "15"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cs = boys[boys.year == 1880]['prop'].cumsum()\n",
    "cs.values.searchsorted(0.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "It took 127 names to get to 50% in 2008 and just 15 in 1880."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Jumping to \"warp speed,\" here is how to use some more advanced concepts to examine this question."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAhYAAAFkCAYAAAB8RXKEAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAAPYQAAD2EBqD+naQAAIABJREFUeJzs3Xlc1VX+x/HXwQXFBM01d9FSK03FJc1drNQmraykzLaZ\n9plyql/jZOlkU9lqNVbTjFNaSWoLbS4Brqi5oGmZmguKihupYC7Icn5/fAEBQVkufLnc9/PxuI8Z\nvt9zv/dzvwb3c8/5nHOMtRYRERERT/BzOwARERGpOJRYiIiIiMcosRARERGPUWIhIiIiHqPEQkRE\nRDxGiYWIiIh4jBILERER8RglFiIiIuIxSixERETEY5RYiIiIiMcUKbEwxjxgjFlvjEnKfCw3xlyb\n4/wHxpiMPI85ea7hb4yZYoxJNMYcM8Z8Zoyp76k3JCIiIu4pao/FbuApoDMQAiwAvjLGtMvRZi7Q\nAGiY+QjLc43JwFDgJqAP0Aj4vMiRi4iISLljSroJmTHmN+AJa+0HxpgPgCBr7Y0FtA0EDgEjrbVf\nZh5rA2wCrrTWripRMCIiIuKqYtdYGGP8jDEjgQBgeY5T/YwxB4wxm40x7xhjLsxxLgSoDERnHbDW\nbgHigR7FjUVERETKh8pFfYIx5nJgBVANOAbckJkcgDMM8jkQB7QCXgTmGGN6WKdrpCFw2lqbnOey\nBzLPFfSadYBrgJ3AqaLGLCIi4sOqAS2A+dba30r7xYqcWACbgSuAIGAEMN0Y08dau9laOytHu43G\nmJ+A7UA/YGEJ4rwG+KQEzxcREfF1twMzSvtFipxYWGvTgB2ZP64zxnQDHgUezKdtnDEmEWiNk1js\nB6oaYwLz9Fo0yDxXkJ0AH3/8Me3atTtHM98wZswY3njjDbfDcJ3ug0P34QzdC4fuwxm6F7Bp0yZG\njRoFmZ+lpa04PRZ5+QH++Z0wxjQB6gD7Mg/FAmnAQCBn8WYznOGVgpwCaNeuHZ07d/ZAyN4tKChI\n9wHdhyy6D2foXjh0H87QvcilTEoJipRYGGNewKmjiAdq4nSr9AWuNsbUAMbj1Fjsx+mlmAT8CswH\nsNYmG2OmAq8bY47g1Gi8BSzTjBARERHvV9Qei/rANOAiIAnYAFxtrV1gjKkGdABGA7WABJyE4llr\nbWqOa4wB0oHPcHo65gEPl+RNiIiISPlQpMTCWvvHc5w7BVxb0Pkc7VKAP2c+REREpALRXiFeKCws\n72Kmvkn3waH7cIbuhUP34Qzdi7JX4pU3y4IxpjMQGxsbqyIcERGRIli7di0hISEAIdbataX9ep6Y\nFVJuxMfHk5iY6HYYAtStW5dmzZq5HYaIiJSxCpNYxMfH065dO06cOOF2KAIEBASwadMmJRciIj6m\nwiQWiYmJnDhxQotolQNZi7EkJiYqsRAR8TEVJrHIokW0RERE3KNZISIiIuIxSixERETEY5RYiIiI\niMcosRARERGPUWLhBSZMmICfnx+HDx92OxQREZFzUmLhBYwxGGPcDkNEROS8lFiIiIiIxyixEBER\nEY9RYuFFDh06xC233EJQUBB169blscceIyUlJft8eno6EydOpHXr1lSrVo2WLVvy9NNPc/r06ew2\nd911F/Xq1SM9Pf2s61999dW5Vi2NjIykd+/e1K5dm5o1a9K2bVuefvrp0n2TIiLi1ZRYeAlrLbfc\ncgunT5/mpZdeYujQobz11lvcf//92W3uvfdexo8fT5cuXZg8eTL9+vXjxRdfzLVt8B133MHhw4eZ\nP39+rusfOHCAhQsXcscddwDwyy+/8Ic//IHU1FQmTpzI66+/zrBhw1i+fHnZvGEREfFKFW5J74qs\nVatWfPHFFwA8+OCD1KxZk3fffZcnnniCjIwMpk+fzn333cd7770HwAMPPEC9evV47bXXWLx4MX37\n9mXAgAE0btyYjz/+mCFDhmRfe8aMGVhruf322wGntyI1NZW5c+dSu3btsn+zIiLilXwysThxAjZv\nLv3XadsWAgI8cy1jDA8//HCuY3/+85955513mDNnDhkZGRhjGDNmTK42jz/+OK+++irfffcdffv2\nxRjD7bffzttvv83x48epUaMG4CQWPXv2pHnz5gDUqlULgC+//JK7775bs1JERKRQfDKx2LwZQkJK\n/3ViY8GT+6G1bt0618+tWrXCz8+PnTt3Yq3Fz8/vrDYNGjSgVq1a7Nq1K/vY6NGjmTRpEl9++SWj\nRo1iy5YtxMbG8v7772e3ufXWW5k6dSp/+tOf+Nvf/sbAgQO58cYbGTFihJIMEREpkE8mFm3bOh/6\nZfE6pSm/D/jCfOi3a9eOkJAQPv74Y0aNGsXHH3+Mv78/N998c3abatWqsWTJEhYuXMh3333HvHnz\nmDlzJgMHDuT7779XciEiIvnyycQiIMCzPQllZevWrdlDFQDbtm0jIyODFi1akJGRQUZGBlu3bqVN\n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\n",
      "text/plain": [
       "<matplotlib.figure.Figure at 0x11a2bd750>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def get_num(group, percent):\n",
    "    ordered = group.sort_values(by='prop', ascending=False)\n",
    "    return ordered['prop'].cumsum().values.searchsorted(percent)\n",
    "\n",
    "def get_num_at_percent(df, pct):\n",
    "    return df.groupby('year').apply(lambda x: get_num(x, pct))\n",
    "\n",
    "# iboys = boys.set_index(['name', 'year'])\n",
    "plt.plot(get_num_at_percent(boys, 0.5), label='boys')\n",
    "plt.plot(get_num_at_percent(girls, 0.5), label='girls')\n",
    "plt.legend(loc='best');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What do you think about this?\n",
    "\n",
    "Why do we seem to have more naming diversity now than in the 20th Century?\n",
    "\n",
    "Why are there more boy names than girl names?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As you can see, Python and pandas makes it easy to explore data and visualize the results. We will expand on all of this in coming weeks of BA575."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Acknowledgements\n",
    "This IPython notebook is adapted from [this](https://www.youtube.com/watch?v=MxRMXhjXZos) talk and [book](http://shop.oreilly.com/product/0636920023784.do) by Wes McKinney and [this](http://www.gregreda.com/2013/10/26/intro-to-pandas-data-structures/) blog by Greg Reda. Much of the notebook remains unchanged from the original versions, but much of it is also original or adapted from a wide variety of other sources.\n",
    "\n",
    "This work is licensed under a [Creative Commons Attribution-ShareAlike 3.0 Unported License](http://creativecommons.org/licenses/by-sa/3.0/deed.en_US). The work is offered for free, with the hope that it will be useful. \n",
    "\n",
    "![CC BY SA](http://i.creativecommons.org/l/by-sa/3.0/88x31.png)"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
